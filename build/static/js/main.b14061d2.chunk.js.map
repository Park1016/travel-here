{"version":3,"sources":["firebase.js","store/apis/board.js","store/modules/board.js","store/apis/userLike.js","store/modules/bookmark.js","store/modules/category.js","store/apis/comment.js","store/modules/comment.js","store/apis/delete.js","store/modules/delete.js","store/apis/post.js","store/modules/mypageBookmark.js","store/modules/mypageComment.js","store/modules/mypagePost.js","store/modules/nav.js","store/apis/postLike.js","store/modules/postLike.js","store/modules/user.js","store/modules/userLike.js","store/modules/view.js","store/index.js","styles/GlobalStyle.js","components/NavLinks/NavLinks.style.js","auth_service.js","components/Logo/Logo.style.js","assets/images/logo.png","components/Logo/Logo.jsx","components/NavLinks/NavLinks.jsx","components/NavBar/NavBar.style.js","components/NavBar/NavBar.jsx","components/Header/Header.style.js","components/Header/Header.jsx","assets/images/background.jpeg","styles/Background.js","components/Category/Category.style.js","components/Category/CategorySkeleton.jsx","components/Category/Category.jsx","pages/CategoryList.jsx","components/Post/styleConstants.js","components/Post/Post.style.js","components/Comment/styleConstants.js","components/Comment/Comment.style.js","utils/timeCalculate.js","components/Comment/CommentList.jsx","components/Comment/Comment.jsx","components/Post/PostSlider/ContentPlaceholder.js","components/Post/PostSlider/PostSlider.style.js","components/Post/PostSlider/PostSlider.jsx","components/Write/WriteModal/WriteModal.style.js","components/Loading/Loading.jsx","components/Write/WriteModal/UpdateModal.jsx","components/Write/WriteModal/WriteModal.jsx","components/Post/Post.jsx","utils/getDate.js","assets/images/blur.png","components/Post/NoneMember.jsx","components/PostCard/ContentPlaceholder.js","components/PostCard/PostCard.style.js","components/PostCard/PostCard.jsx","pages/Board/Board.style.js","pages/Board/Board.jsx","components/GreetingCard/GreetingCard.style.js","components/GreetingCard/GreetingCard.jsx","pages/Home.jsx","components/LoginModal/LoginModalOpen.style.js","components/LoginModal/header/LoginHeader.style.js","components/LoginModal/footer/LoginFooter.style.js","components/LoginModal/footer/LoginFooter.jsx","components/LoginModal/header/LoginHeader.jsx","components/LoginModal/LoginModalOpen.jsx","pages/Login.jsx","pages/NotFound.style.js","pages/NotFound.jsx","components/Write/WriteBtn/WriteBtn.style.js","components/Write/WriteBtn/WriteBtn.jsx","components/Mypage/styleConstatns.js","components/Mypage/Mypage.style.js","components/Mypage/info/Info.style.js","components/Mypage/info/Info.jsx","components/Mypage/post/Post.style.js","components/Mypage/post/Post.jsx","components/Mypage/comment/Comment.style.js","components/Mypage/comment/Comment.jsx","components/Mypage/bookmark/Bookmark.style.js","components/Mypage/bookmark/Bookmark.jsx","components/Mypage/Password/Password.style.js","components/Mypage/Password/Password.jsx","components/Mypage/Mypage.jsx","pages/MyPage.jsx","components/LoginHelp/LoginHelp.style.js","components/LoginHelp/LoginHelp.jsx","pages/LoginFind.jsx","hooks/useAuth.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","dbService","firestore","storageService","storage","getPostListAPI","auth","region","a","collection","where","get","response","FETCH_POSTLIST_REQUEST","FETCH_POSTLIST_SUCCESS","FETCH_POSTLIST_ERROR","fetchPostListSuccess","payload","type","initialState","loading","error","data","reducer","prevState","action","getUserAPI","id","produce","require","GET_USER","BOOKMARK","NONE_BOOKMARK","bookmark","noneBookmark","post","bookmarkMiddleware","userId","postId","dispatch","arr","user","forEach","doc","push","console","log","draft","postIds","uid","update","user_bookmark_posts","FieldValue","arrayUnion","filter","elem","initPhoto","GET_CATEGORY_START","GET_CATEGORY_SUCCESS","GET_CATEGORY_FAIL","getCommentAPI","getMypageCommentAPI","editMypageAPI","COMMENT_ADD","COMMENT_EDIT","COMMENT_ERROR","COMMENT_DELETE","commentAdd","commentDelAPI","userComDelAPI","userLikeDelAPI","userBookmarkDelAPI","COMMENT_DEL","USERCOMMENT_DEL","USERLIKE_DEL","USERBOOKMARK_DEL","commentDelete","commentDelThunk","com","userComDelThunk","array","Object","assign","userLikeDelThunk","obj","userBookmarkDelThunk","getCom","getComId","length","count","i","comment_id","delete","user_write_comments","arrayRemove","user_like_posts","getPostAPI","getBookmarkAPI","editMypageImgAPI","GET_BOOKMARK","mypageBookmarkMiddleware","GET_COMMENT","EDIT_USERNAME","EDIT_IMG","editCommentImg","mypageCommentMiddleware","editObj","value","editMypageThunk","comment_writer","user_image","GET_POST","EDIT_NAME","img","name","mypagePostMiddleware","post_id","post_profile_img","post_writer","OPEN_NAV","CLOSE_NAV","openNav","closeNav","initialvalue","isNavOpened","state","getLikeAPI","GET_LIKE","LIKE_LIKE","LIKE_NONLIKE","onLike","onNoneLike","likeNum","likeMiddleware","num","comId","post_like","LOGIN_USER_INFO","LOGOUT_USER_INFO","loginUserInfo","logoutUserInfo","initialValue","isLoggedIn","userInfo","LIKE_USER","NONELIKE_USER","likeUser","noneLikeUser","userMiddleware","GET_VIEW","PLUS_VIEW","getView","view","viewMiddleware","post_view","combineReducers","board","comment","category","nav","postLike","userLike","mypagePost","mypageBookmark","mypageComment","del","enhancer","compose","applyMiddleware","thunk","store","createStore","GlobalStyle","createGlobalStyle","reset","Header","styled","div","Container","props","isPc","login","css","Ul","ul","Li","li","Button","button","StyledNav","NavLink","AuthService","providerName","authProvider","firebaseService","signInWithPopup","signOut","onUserChanged","onAuthStateChanged","Img","Logo","history","useHistory","src","logo","alt","onClick","pathname","authService","onLogout","logout","activeStyle","color","NavLinks","navToggle","useDispatch","useSelector","useEffect","to","exact","Line","width","NavBar","header","useMediaQuery","query","Background","background","Content","section","CategoryBox","ArrowStyle","right","LinkStyle","Link","SkeletonWrapper","SkeletonContainer","SkeletonTitle","SkeletonImg","CategorySkeleton","useState","categoryCnt","setCategoryCnt","maxWidth","skeleton","Category","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","_NextArrow","prevArrow","_PrevArrow","getCategory","useCallback","getState","res","resArray","photo","post_photo","random","Math","floor","post_region","map","cate","index","replace","toUpperCase","className","CategoryList","flex","marginTop","hideScrollbar","cursorPointer","gray","darkGray","red","blue","lightPurple","showPost","keyframes","Contents","editDelToggle","Profile","Title","Like","showBookmark","Bookmark","show","Alert","AlertText1","p","AlertText2","Comment","CommentList","ProfileIcon","span","EditDel","Check","Toggle","Time","timeNotice","time","seconds","Date","minutes","hours","days","weeks","months","years","add","onEdit","onDelete","onScroll","render","editDelete","setEditDelete","edit","setEdit","userCheck","user_uid","container","useRef","input","onEditFrame","placeholder","comment_content","onDeleteList","e","window","confirm","target","parentElement","ref","onKeyPress","key","shiftKey","preventDefault","onEnter","timeCalculate","current","memo","postregion","userDB","postView","uuid","uuidv4","textarea","postBtn","allComment","setRender","setUser","setAdd","onNotPost","style","fontWeight","onAdd","now","set","comment_like","displayName","lastElementChild","scrollIntoView","behavior","block","onChange","slice","sort","b","ImageLoader","height","viewBox","gradientRatio","backgroundColor","foregroundColor","x","y","rx","ry","StyledSlider","Slider","Div","PostSlider","postImages","imageURL","setImageURL","sliderReady","setSliderReady","result","imageRef","refFromURL","getDownloadURL","url","imageURLCheck","then","catch","setTimeout","margin","onMouseDown","cursor","onMouseUp","swipToSlide","lazyLoad","image","primaryColor","lightBlack","visible","isHeight","TitleInput","ImgUpload","ImgWrapper","undefined","attachment","BtnWrapper","Wrapper","NamelessIcon","Name","CloseModal","Overlay","textAlign","Loading","UpdateModal","isVisible","postData","likePost","post_date","post_title","post_content","post_uid","setPost","title","setTitle","setRegion","setPhoto","load","setLoad","postRef","titleRef","setAttachment","onSubmit","alert","focus","attachmentUrl","attachmentRef","child","putString","updateData","post_update","location","reload","close","closeModal","currentTarget","onOverlayClick","rows","for","multiple","accept","file","files","fileURLs","reader","FileReader","onload","readAsDataURL","atta","at","WriteModal","maxHeight","useLocation","setLogin","ID","user_write_posts","writeData","photoURL","search","like","write","tabIndex","Post","setIsPostOpened","setLikeRender","setViewRender","viewRender","setTime","bar","setBar","check","setCheck","innerWidth","setWidthSize","setVisible","includes","setLikePost","bookmarkPost","setBookmarkPost","onLikeToggle","onBookmarkToggle","postEdit","postDelete","onEditDelete","onHideModal","handleSize","scrollHeight","addEventListener","throttle","removeEventListener","hasOwnProperty","onContainerClick","disabled","getDate","timeStamp","Number","year","getFullYear","month","getMonth","date","hour","getHours","minute","getMinutes","NoneMember","blur","MyLoader","cx","cy","r","PostCard","setUserCheck","setUpdate","isPostOpened","repImageName","repImage","setRepImage","qsID","qs","parse","ignoreQueryPrefix","getRepImage","profileImageName","setProfileImage","getProfileImage","onShowPostModal","onView","lazyTarget","isView","setIsView","observer","IntersectionObserver","entries","entry","isIntersecting","unobserve","threshold","observe","disconnect","profile","isTablet","Column","Board","match","postList","params","ceil","ele","H2","h2","P","GreetingCard","Home","Logincontainer","LoginBg","white","pink","Footer","footer","LoginFooter","goToLogin","onLogin","event","textContent","onAuthChange","LoginHeader","email","setEmail","password","setPassword","handleLogin","handleSignUP","hasAccount","emailError","passwordError","handleLogout","toggleClass","goToPassword","getUserProfile","autoFocus","required","LoginModalOpen","setEmailError","setPasswordError","setHasAccount","clearErrors","signInWithEmailAndPassword","err","code","message","createUserWithEmailAndPassword","authListener","currentUser","Login","NotFound","goBack","darkBlue","WriteBtn","onMouseOver","display","onMouseOut","frame","purple","leftclose","leftshow","BackImage","ListArea","rightclose","rightshow1","Id","NickName","ProfileImg","Icon","Paragraph","Form","form","Info","change","setChange","nickName","setNickName","setImg","onUsername","onSubmitBtn","changeImg","onDefaultImg","editUserImgThunk","maxLength","wrap","List","Null","postDB","onMovePage","commentDB","bookmarkDB","bm","Password","passwordChange","getASecureRandomPassword","newPassword","updatePassword","credential","EmailAuthProvider","reauthenticateWithCredential","Mypage","info","setInfo","setComment","setBookmark","open","setOpen","setUid","onClose","onDelayClose","matchMedia","matches","MyPage","BackBtn","LoginHelp","sendPasswordResetEmail","LoginFind","useAuth","exists","user_like_comments","App","active","setActive","path","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b14061d2.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STOREAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_API_ID,\r\n  measurementId: process.env.REACT_APP_MEARUEMENT_ID,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\nexport const authService = firebase.auth();\r\n","import { dbService } from \"firebase.js\";\r\n\r\nexport const getPostListAPI = async (region) => {\r\n  const response = await dbService.collection(\"post\").where(\"post_region\",\"==\",region).get()\r\n\r\n  return response;\r\n};\r\n\r\n// onSnapShot이 실시간 업데이트 된다던데.. => 굳이 그럴 필요가 있을까?? onSnapShot()은 async await 사용 불가\r\n","import { produce } from \"immer\";\r\nimport { getPostListAPI } from \"store/apis/board\";\r\n\r\n// Actions\r\nconst FETCH_POSTLIST_REQUEST = \"board/FETCH_POSTLIST_REQUEST\";\r\nconst FETCH_POSTLIST_SUCCESS = \"board/FETCH_POSTLIST_SUCCESS\";\r\nconst FETCH_POSTLIST_ERROR = \"board/FETCH_POSTLIST_ERROR\";\r\n\r\n// Action 생성자\r\nexport const fetchPostListRequest = () => {\r\n  return {\r\n    type: FETCH_POSTLIST_REQUEST,\r\n  };\r\n};\r\nexport const fetchPostListSuccess = (payload) => {\r\n  return {\r\n    type: FETCH_POSTLIST_SUCCESS,\r\n    payload,\r\n  };\r\n};\r\nexport const fetchPostListError = (error) => {\r\n  return {\r\n    type: FETCH_POSTLIST_ERROR,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n// thunk\r\nexport const fetchPostList = region => async dispatch => {\r\n    dispatch(fetchPostListRequest());\r\n    try{\r\n        const response = await getPostListAPI(region);\r\n        const payload = [];\r\n        response.forEach(doc => {\r\n            payload.push(doc.data());\r\n        })\r\n        dispatch(fetchPostListSuccess(payload));\r\n    }catch(error){\r\n        dispatch(fetchPostListError(error))\r\n    }\r\n}\r\n\r\n// Reducer\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: [],\r\n};\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTLIST_REQUEST:\r\n      return {\r\n        ...prevState,\r\n        loading: true,\r\n      };\r\n    case FETCH_POSTLIST_SUCCESS:\r\n      return {\r\n        ...prevState,\r\n        loading: false,\r\n        data: action.payload,\r\n      };\r\n    case FETCH_POSTLIST_ERROR:\r\n      return {\r\n        ...prevState,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { dbService } from \"firebase.js\";\r\n\r\nexport const getUserAPI = async(id) => {\r\n  const response = await dbService.collection(\"users\").where(\"uid\",\"==\",id).get();\r\n  return response;\r\n}","import { getUserAPI } from 'store/apis/userLike';\r\nimport { dbService } from 'firebase.js';\r\nimport firebase from \"firebase\";\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_USER = 'userLike/GET_USER';\r\nconst BOOKMARK  = 'userLike/BOOKMARK';\r\nconst NONE_BOOKMARK = 'userLike/NONE_BOOKMARK';\r\n\r\n// Action 생성자\r\nexport const getUser = (payload) => {\r\n  return {\r\n    type: GET_USER,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const bookmark = (payload) => {\r\n  return {\r\n    type: BOOKMARK,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const noneBookmark = (payload) => {\r\n  return {\r\n    type: NONE_BOOKMARK,\r\n    payload,\r\n  }\r\n};  \r\n\r\n// Reducer\r\nconst initialState = {\r\n  data: [],\r\n  post: '',\r\n};\r\n\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_USER:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        break;\r\n      case BOOKMARK:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        let postIds = '';\r\n        postIds = draft.post;\r\n        dbService.collection('users').doc(draft.data.uid).update({\r\n          user_bookmark_posts: firebase.firestore.FieldValue.arrayUnion(postIds),      \r\n        });\r\n        break;\r\n      case NONE_BOOKMARK:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        dbService.collection('users').doc(draft.data.uid).update({\r\n          user_bookmark_posts: draft.data.user_bookmark_posts.filter((elem) => elem !== draft.post),      \r\n        });\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n// thunk\r\nexport const bookmarkMiddleware = (userId, postId, type) => async dispatch => {\r\n  try{\r\n    const response = await getUserAPI(userId);\r\n    let arr = {user: [], postId};\r\n    response.forEach(doc => {\r\n      arr.user.push(doc.data());\r\n    });\r\n    if(type === 'init'){\r\n      dispatch(getUser(arr));\r\n      return;\r\n    }\r\n    if(type === 'bookmark'){\r\n      dispatch(bookmark(arr));\r\n    }else{\r\n      dispatch(noneBookmark(arr));\r\n    };\r\n  }catch(error){\r\n    console.log(error);\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { dbService } from \"firebase.js\";\r\n\r\nconst initPhoto =\r\n  \"https://firebasestorage.googleapis.com/v0/b/travel-here-36a2e.appspot.com/o/HlCc4DymorVti0MHAKahOG2TDEv2%2F2148e2a6-0ee1-4adb-927c-873bb956c872?alt=media&token=26e06540-1638-4abc-ab51-6ae1506082f2\";\r\n\r\n//actions\r\nconst GET_CATEGORY_START = \"category/GET_CATEGORY_START\";\r\nconst GET_CATEGORY_SUCCESS = \"category/GETCATEGORY_SUCCESS\";\r\nconst GET_CATEGORY_FAIL = \"category/GET_CATEGORY_FAIL\";\r\n\r\n//action constructor\r\nexport function getCategoryStart() {\r\n  return {\r\n    type: GET_CATEGORY_START,\r\n  };\r\n}\r\n\r\nexport function getCategorySuccess(data) {\r\n  return {\r\n    type: GET_CATEGORY_SUCCESS,\r\n    data,\r\n  };\r\n}\r\n\r\nexport function getCategoryFail(error) {\r\n  return {\r\n    type: GET_CATEGORY_FAIL,\r\n    error,\r\n  };\r\n}\r\n\r\n// initial\r\nconst initialState = {\r\n  loading: false,\r\n  data: [],\r\n  error: null,\r\n};\r\n\r\n// reducer\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CATEGORY_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case GET_CATEGORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.data,\r\n      };\r\n    case GET_CATEGORY_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n} // redux-thunk\r\nexport function getCategoryThunk() {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch(getCategoryStart());\r\n      const res = await dbService.collection(\"post\").get();\r\n      let resArray = [\r\n        {\r\n          region: \"asia\",\r\n          photo: initPhoto,\r\n        },\r\n        {\r\n          region: \"north_america\",\r\n          photo: initPhoto,\r\n        },\r\n        {\r\n          region: \"south_america\",\r\n          photo: initPhoto,\r\n        },\r\n        {\r\n          region: \"africa\",\r\n          photo: initPhoto,\r\n        },\r\n        {\r\n          region: \"europe\",\r\n          photo: initPhoto,\r\n        },\r\n        {\r\n          region: \"oceania\",\r\n          photo: initPhoto,\r\n        },\r\n      ];\r\n      res.forEach((res) => {\r\n        if (res.data().post_photo.length > 0) {\r\n          const random = Math.floor(\r\n            Math.random() * res.data().post_photo.length\r\n          );\r\n          for (let i = 0; i < resArray.length; i++) {\r\n            if (resArray[i].region === res.data().post_region) {\r\n              resArray[i].photo = res.data().post_photo[random];\r\n            }\r\n          }\r\n        }\r\n      });\r\n      dispatch(getCategorySuccess(resArray));\r\n    } catch (e) {\r\n      dispatch(getCategoryFail(e));\r\n    }\r\n  };\r\n}\r\n","import { dbService } from \"firebase.js\";\r\n\r\nexport const getCommentAPI = async(id) => {\r\n  const response = await dbService.collection(\"comment\").where(\"post_id\",\"==\",id).get();\r\n  return response;\r\n}\r\n\r\nexport const getMypageCommentAPI = async(id) => {\r\n  const response = await dbService.collection(\"comment\").where(\"comment_id\",\"==\",id).get();\r\n  return response;\r\n}\r\n\r\nexport const editMypageAPI = async(id) => {\r\n  const response = await dbService.collection(\"comment\").where(\"user_uid\",\"==\",id).get();\r\n  return response;\r\n}","import { getCommentAPI } from 'store/apis/comment';\r\nconst { produce } = require('immer');\r\n\r\n// Actions\r\nconst COMMENT_ADD = 'comment/COMMENT_ADD';\r\nconst COMMENT_EDIT = 'comment/COMMENT_EDIT';\r\nconst COMMENT_ERROR = 'comment/COMMENT_ERROR';\r\nconst COMMENT_DELETE = 'comment/COMMENT_DELETE';\r\n\r\n// Action 생성자\r\nexport const commentAdd = payload => {\r\n  return {\r\n    type : COMMENT_ADD,\r\n    payload,\r\n  }\r\n}\r\nexport const commentEdit = payload => {\r\n  return {\r\n    type : COMMENT_EDIT,\r\n    payload,\r\n  }\r\n}\r\nexport const commentError = error => {\r\n  return {\r\n    type : COMMENT_ERROR,\r\n    payload : error\r\n  }\r\n}\r\nexport const commentDelete = () => {\r\n  return {\r\n    type : COMMENT_DELETE,\r\n  }\r\n}\r\n\r\n\r\n// thunk\r\nexport const commentMiddleware = (id) => async dispatch => {\r\n  try{\r\n    const response = await getCommentAPI(id);\r\n    const payload = [];\r\n    response.forEach(doc => {\r\n      payload.push(doc.data());\r\n    })\r\n    dispatch(commentAdd(payload));\r\n  }catch(error){\r\n    dispatch(commentError(error));\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// Reducer\r\nconst initialState = {\r\n  error : null,\r\n  data : [],\r\n};\r\n\r\nconst reducer = (prevState=initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch(action.type){\r\n      case COMMENT_ADD :\r\n        draft.data = action.payload;\r\n        break;\r\n      case COMMENT_EDIT :\r\n        draft.data = action.payload;\r\n        break;\r\n      case COMMENT_ERROR :\r\n        draft.data = action.payload;\r\n        break;\r\n      case COMMENT_DELETE :\r\n        draft.data = [];\r\n        break;\r\n      default :\r\n        return prevState;\r\n    }\r\n  })\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { dbService } from \"firebase.js\";\r\n\r\nexport const commentDelAPI = async(id) => {\r\n  const response = await dbService.collection(\"comment\").where(\"post_id\",\"==\",id).get();\r\n  return response;\r\n}\r\n\r\nexport const userComDelAPI = async(id) => {\r\n  const response = await dbService.collection(\"users\").where(\"user_write_comments\", \"array-contains\", id).get();\r\n  return response;\r\n}\r\n\r\nexport const userLikeDelAPI = async(id) => {\r\n  const response = await dbService.collection(\"users\").where(\"user_like_posts\", \"array-contains\", id).get();\r\n  return response;\r\n}\r\n\r\nexport const userBookmarkDelAPI = async(id) => {\r\n  const response = await dbService.collection(\"users\").where(\"user_bookmark_posts\", \"array-contains\", id).get();\r\n  return response;\r\n}","import { commentDelAPI } from 'store/apis/delete';\r\nimport { userLikeDelAPI } from 'store/apis/delete';\r\nimport { userBookmarkDelAPI } from 'store/apis/delete';\r\nimport { userComDelAPI } from 'store/apis/delete';\r\nimport { dbService } from 'firebase.js';\r\nimport firebase from 'firebase';\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst COMMENT_DEL = 'delete/COMMENT_DEL';\r\nconst USERCOMMENT_DEL = 'delete/USERCOMMENT_DEL';\r\nconst USERLIKE_DEL = 'delete/USERLIKE_DEL';\r\nconst USERBOOKMARK_DEL = 'delete/USERBOOKMARK_DEL';\r\n\r\n\r\n// Action 생성자\r\nexport const commentDelete = (payload) => {\r\n  return {\r\n    type : COMMENT_DEL,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const userComDelete = (payload) => {\r\n  return {\r\n    type : USERCOMMENT_DEL,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const userLikeDelete = (payload) => {\r\n  return {\r\n    type : USERLIKE_DEL,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const userBookmarkDelete = (payload) => {\r\n  return {\r\n    type : USERBOOKMARK_DEL,\r\n    payload,\r\n  }\r\n}\r\n\r\n\r\n// thunk\r\nexport const commentDelThunk = (id) => async dispatch => {\r\n  try{\r\n    const response = await commentDelAPI(id);\r\n    const payload = [];\r\n    response.forEach(doc => {\r\n      payload.push(doc.data());\r\n    })\r\n    dispatch(commentDelete(payload));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nlet com = {data: [], id: ''};\r\nexport const userComDelThunk = (id) => async dispatch => {\r\n  try{\r\n    const response = await userComDelAPI(id);\r\n    // const obj = {data: [], id};\r\n    // response.forEach(doc => {\r\n      //   obj.data.push(doc.data());\r\n      // })\r\n    com.id = id;\r\n    response.forEach(doc => {\r\n      com.data.push(doc.data());\r\n    })\r\n    let array = Object.assign([], com.data);\r\n    com.data = array;\r\n    dispatch(userComDelete(com));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const userLikeDelThunk = (id) => async dispatch => {\r\n  try{\r\n    const response = await userLikeDelAPI(id);\r\n    const obj = {data: [], id};\r\n    response.forEach(doc => {\r\n      obj.data.push(doc.data());\r\n    })\r\n    dispatch(userLikeDelete(obj));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const userBookmarkDelThunk = (id) => async dispatch => {\r\n  try{\r\n    const response = await userBookmarkDelAPI(id);\r\n    const obj = {data: [], id};\r\n    response.forEach(doc => {\r\n      obj.data.push(doc.data());\r\n    })\r\n    dispatch(userBookmarkDelete(obj));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// Reducer\r\nconst initialState = {\r\n  data : [],\r\n  id: '',\r\n};\r\n\r\nlet getCom = [];\r\nexport const getComId = (arr) => {\r\n  if(getCom.length === 2){\r\n    getCom = [];\r\n  }\r\n  getCom.push(arr);\r\n  return getCom;\r\n}\r\n\r\nlet count = -1;\r\nlet arr = [];\r\nconst reducer = (prevState=initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch(action.type){\r\n      case COMMENT_DEL :\r\n        draft.data = action.payload;\r\n        for(let i=0; i<draft.data.length;i++){\r\n          dbService.collection('comment').doc(draft.data[i].comment_id).delete();\r\n          arr.push(draft.data[i].comment_id);\r\n        }\r\n        getComId(arr);\r\n        break;\r\n      case USERCOMMENT_DEL :\r\n        count+=1;\r\n        draft.id = action.payload.id;\r\n        draft.data = action.payload.data[count];\r\n        draft.data.uid = action.payload.data[count].uid;\r\n\r\n        dbService.collection('users').doc(draft.data.uid).update({\r\n          user_write_comments: firebase.firestore.FieldValue.arrayRemove(draft.id),\r\n        });\r\n\r\n        if(count === draft.data.length-1){\r\n          count = -1;\r\n        }\r\n        break;\r\n      case USERLIKE_DEL :\r\n        draft.id = action.payload.id;\r\n        for(let i=0; i<action.payload.data.length;i++){\r\n          draft.data = action.payload.data[i];\r\n          dbService.collection('users').doc(draft.data.uid).update({\r\n            user_like_posts: firebase.firestore.FieldValue.arrayRemove(draft.id),\r\n          });\r\n        }\r\n        break;\r\n      case USERBOOKMARK_DEL :\r\n        draft.id = action.payload.id;\r\n        for(let i=0; i<action.payload.data.length;i++){\r\n          draft.data = action.payload.data[i];\r\n          dbService.collection('users').doc(draft.data.uid).update({\r\n            user_bookmark_posts: firebase.firestore.FieldValue.arrayRemove(draft.id),\r\n          });\r\n        }\r\n        break;\r\n      default :\r\n          return prevState;\r\n    }\r\n  })\r\n}\r\n\r\nexport default reducer;","import { dbService } from \"firebase.js\";\r\n\r\nexport const getPostAPI = async(id) => {\r\n  const response = await dbService.collection(\"post\").where(\"post_uid\",\"==\",id).get();\r\n  return response;\r\n}\r\n\r\nexport const getBookmarkAPI = async(id) => {\r\n  const response = await dbService.collection(\"post\").where(\"post_id\",\"==\",id).get();\r\n  return response;\r\n}\r\n\r\nexport const editMypageImgAPI = async(id) => {\r\n  const response = await dbService.collection(\"post\").where(\"post_uid\",\"==\",id).get();\r\n  return response;\r\n}","import { getBookmarkAPI } from 'store/apis/post';\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_BOOKMARK = 'mypageBookmark/GET_BOOKMARK';\r\n\r\n// Action 생성자\r\nexport const getBookmark = (payload) => {\r\n  return {\r\n    type: GET_BOOKMARK,\r\n    payload,\r\n  }\r\n};\r\n\r\n// Reducer\r\nconst initialState = {\r\n  data: [],\r\n  loading: false,\r\n};\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_BOOKMARK:\r\n        draft.data = action.payload;\r\n        draft.loading = true;\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nlet arr = [];\r\n// thunk\r\nexport const mypageBookmarkMiddleware = (id, type) => async dispatch => {\r\n  try{\r\n    const response = await getBookmarkAPI(id);\r\n    response.forEach(doc => {\r\n      arr.push(doc.data());\r\n    })\r\n    let array = Object.assign([], arr);\r\n    dispatch(getBookmark(array));\r\n    if(type === 'finish'){\r\n      arr = [];\r\n    }\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","'use strict';\r\nimport { getMypageCommentAPI, editMypageAPI } from 'store/apis/comment';\r\nimport { dbService } from 'firebase.js';\r\nimport { produce } from 'immer';\r\n\r\n\r\n// Actions\r\nconst GET_COMMENT = 'mypageComment/GET_COMMENT';\r\nconst EDIT_USERNAME = 'mypageComment/EDIT_USERNAME';\r\nconst EDIT_IMG = 'mypageComment/EDIT_IMG';\r\n\r\n\r\n// Action 생성자\r\nexport const getComment = payload => {\r\n  return {\r\n    type : GET_COMMENT,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const editCommentUserName = payload => {\r\n  return {\r\n    type : EDIT_USERNAME,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const editCommentImg = payload => {\r\n  return {\r\n    type : EDIT_IMG,\r\n    payload,\r\n  }\r\n}\r\n\r\n\r\nlet arr = [];\r\n//thunk\r\nexport const mypageCommentMiddleware = (id, type) => async dispatch => {\r\n  try{\r\n    if(type === 'finish'){\r\n      arr = [];\r\n      return;\r\n    }\r\n    const response = await getMypageCommentAPI(id);\r\n    response.forEach(doc => {\r\n      arr.push(doc.data());\r\n    })\r\n    let array = Object.assign([], arr);\r\n    dispatch(getComment(array));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nlet editObj = {arr: [], value: ''};\r\nexport const editMypageThunk = (id, value, type) => async dispatch => {\r\n  try{\r\n    if(type === 'finish'){\r\n      editObj = {arr: [], value: ''};\r\n      return;\r\n    }\r\n    const response = await editMypageAPI(id);\r\n    response.forEach(doc => {\r\n      editObj.arr.push(doc.data());\r\n      editObj.value = value;\r\n    })\r\n    let array = Object.assign([], editObj.arr);\r\n    editObj.arr = array;\r\n    if(type === 'name'){\r\n      dispatch(editCommentUserName(editObj));\r\n    }\r\n    if(type === 'img'){\r\n      dispatch(editCommentImg(editObj));\r\n    }\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\n\r\n// Reducer\r\nconst initialState = {\r\n  data : [],\r\n};\r\n\r\nconst reducer = (prevState=initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch(action.type){\r\n      case GET_COMMENT :\r\n        draft.data = action.payload;\r\n        break;\r\n      case EDIT_USERNAME :\r\n        draft.data = action.payload;\r\n        for(let i=0; i<draft.data.arr.length; i++){\r\n          dbService.collection('comment').doc(draft.data.arr[i].comment_id).update({\r\n            comment_writer: draft.data.value,      \r\n          });\r\n        }\r\n        break;\r\n      case EDIT_IMG:\r\n        draft.data = action.payload;\r\n        for(let i=0; i<draft.data.arr.length; i++){\r\n          dbService.collection('comment').doc(draft.data.arr[i].comment_id).update({\r\n            user_image: draft.data.value,      \r\n          });\r\n        }\r\n        break;\r\n      default :\r\n        return prevState;\r\n    }\r\n  })\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { getPostAPI, editMypageImgAPI } from 'store/apis/post';\r\nimport { dbService } from 'firebase.js';\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_POST = 'mypagePost/GET_POST';\r\nconst EDIT_IMG = 'mypagePost/EDIT_IMG';\r\nconst EDIT_NAME = 'mypagePost/EDIT_NAME';\r\n\r\n// Action 생성자\r\nexport const getPost = (payload) => {\r\n  return {\r\n    type: GET_POST,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const editImg = (payload) => {\r\n  return {\r\n    type: EDIT_IMG,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const editName = (payload) => {\r\n  return {\r\n    type: EDIT_NAME,\r\n    payload,\r\n  }\r\n};\r\n\r\n// Reducer\r\nconst initialState = {\r\n  data: [],\r\n  img: '',\r\n  name: '',\r\n};\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_POST:\r\n        draft.data = action.payload;\r\n        break;\r\n      case EDIT_IMG:\r\n        draft.data = action.payload.arr;\r\n        draft.img = action.payload.img;\r\n        for(let i=0; i<draft.data.length; i++){\r\n          dbService.collection('post').doc(draft.data[i].post_id).update({\r\n            post_profile_img: draft.img,      \r\n          });\r\n        }\r\n        break;\r\n      case EDIT_NAME:\r\n        draft.data = action.payload.arr;\r\n        draft.name = action.payload.name;\r\n        for(let i=0; i<draft.data.length; i++){\r\n          dbService.collection('post').doc(draft.data[i].post_id).update({\r\n            post_writer: draft.name,      \r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n// thunk\r\nexport const mypagePostMiddleware = (id) => async dispatch => {\r\n  try{\r\n    const response = await getPostAPI(id);\r\n    let arr = [];\r\n    response.forEach(doc => {\r\n      arr.push(doc.data());\r\n    })\r\n    dispatch(getPost(arr));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const editUserImgThunk = (id, img) => async dispatch => {\r\n  try{\r\n    const response = await editMypageImgAPI(id);\r\n    let arr = {arr: [], img};\r\n    response.forEach(doc => {\r\n      arr.arr.push(doc.data());\r\n    })\r\n    dispatch(editImg(arr));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const editUserNameThunk = (id, name) => async dispatch => {\r\n  try{\r\n    const response = await editMypageImgAPI(id);\r\n    let arr = {arr: [], name};\r\n    response.forEach(doc => {\r\n      arr.arr.push(doc.data());\r\n    })\r\n    dispatch(editName(arr));\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default reducer;","// action\r\nconst OPEN_NAV = 'nav/OPEN_NAV';\r\nconst CLOSE_NAV = 'nav/CLOSE_NAV';\r\n\r\nexport const openNav = () => {\r\n  return {\r\n    type : OPEN_NAV\r\n  }\r\n}\r\n\r\nexport const closeNav = () => {\r\n  return {\r\n    type : CLOSE_NAV\r\n  }\r\n}\r\n\r\n// reducer\r\nconst initialvalue = {\r\n  isNavOpened : false\r\n}\r\n\r\nconst reducer = (state = initialvalue, action) => {\r\n  switch(action.type){\r\n    case OPEN_NAV:\r\n      return { ...state, isNavOpened : true };\r\n    case CLOSE_NAV:\r\n      return { ...state, isNavOpened : false };\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { dbService } from \"firebase.js\";\r\n\r\nexport const getLikeAPI = async(id) => {\r\n  const response = await dbService.collection(\"post\").where(\"post_id\",\"==\",id).get();\r\n  return response;\r\n}","import { getLikeAPI } from 'store/apis/postLike';\r\nimport { commentDelAPI } from 'store/apis/delete';\r\nimport { dbService } from 'firebase.js';\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_LIKE = 'postLike/GET_LIKE';\r\nconst LIKE_LIKE  = 'postLike/LIKE_LIKE';\r\nconst LIKE_NONLIKE = 'postLike/LIKE_NONLIKE'\r\n\r\n// Action 생성자\r\nexport const getLike = (payload) => {\r\n  return {\r\n    type: GET_LIKE,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const onLike = (payload) => {\r\n  return {\r\n    type: LIKE_LIKE,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const onNoneLike = (payload) => {\r\n  return {\r\n    type: LIKE_NONLIKE,\r\n    payload,\r\n  }\r\n};\r\n\r\n// Reducer\r\nconst initialState = {\r\n  likeNum: 0,\r\n};\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_LIKE:\r\n        draft.likeNum = action.payload.num;\r\n        break;\r\n      case LIKE_LIKE:\r\n        draft.likeNum = action.payload.num+1;\r\n        dbService.collection('post').doc(action.payload.id).update({\r\n          post_like: draft.likeNum,\r\n        });\r\n        if(action.payload.comId){\r\n          dbService.collection('comment').doc(action.payload.comId).update({\r\n            post_like: draft.likeNum,\r\n          });\r\n        }\r\n        break;\r\n      case LIKE_NONLIKE:\r\n        if(draft.likeNum === 0){\r\n          return;\r\n        }\r\n        draft.likeNum = action.payload.num-1;\r\n        dbService.collection('post').doc(action.payload.id).update({\r\n          post_like: draft.likeNum,\r\n        });\r\n        if(action.payload.comId){\r\n          dbService.collection('comment').doc(action.payload.comId).update({\r\n            post_like: draft.likeNum,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n// thunk\r\nexport const likeMiddleware = (id, type) => async dispatch => {\r\n  try{\r\n    const response = await getLikeAPI(id);\r\n    const com = await commentDelAPI(id);\r\n    let arr = {num: 0, id: '', comId: ''};\r\n    response.forEach(doc => {\r\n      arr.num = doc.data().post_like;\r\n      arr.id = id;\r\n    })\r\n    if(com){\r\n      com.forEach(doc => {\r\n        arr.comId = doc.data().comment_id;\r\n      })\r\n    }else{\r\n      arr.comId = null;\r\n    }\r\n    if(type === 'init'){\r\n      dispatch(getLike(arr));\r\n      return;\r\n    }\r\n    if(type === 'like'){\r\n      dispatch(onLike(arr));\r\n      return;\r\n    }\r\n    if(type === 'noneLike'){\r\n      dispatch(onNoneLike(arr));\r\n      return;\r\n    }\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","// A R S\r\n\r\n// action\r\n\r\nconst LOGIN_USER_INFO = \"user/GET_USER_INFO\";\r\nconst LOGOUT_USER_INFO = \"user/LOGOUT_USER_INFO\";\r\n\r\n// action 생성자\r\nexport const loginUserInfo = (payload) => {\r\n  return {\r\n    type: LOGIN_USER_INFO,\r\n    payload: payload,\r\n  };\r\n};\r\nexport const logoutUserInfo = () => {\r\n  return {\r\n    type: LOGOUT_USER_INFO,\r\n  };\r\n};\r\n\r\n// initialValue\r\nconst initialValue = {\r\n  isLoggedIn: false,\r\n  userInfo: {},\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = initialValue, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: action.payload,\r\n        isLoggedIn: true,\r\n      };\r\n    case LOGOUT_USER_INFO:\r\n      return {\r\n        ...state,\r\n        userInfo: {},\r\n        isLoggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { getUserAPI } from 'store/apis/userLike';\r\nimport { dbService } from 'firebase.js';\r\nimport firebase from \"firebase\";\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_USER = 'userLike/GET_USER';\r\nconst LIKE_USER  = 'userLike/LIKE_USER';\r\nconst NONELIKE_USER = 'userLike/NONELIKE_USER';\r\n\r\n// Action 생성자\r\nexport const getUser = (payload) => {\r\n  return {\r\n    type: GET_USER,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const likeUser = (payload) => {\r\n  return {\r\n    type: LIKE_USER,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const noneLikeUser = (payload) => {\r\n  return {\r\n    type: NONELIKE_USER,\r\n    payload,\r\n  }\r\n};  \r\n\r\n// Reducer\r\nconst initialState = {\r\n  data: [],\r\n  post: '',\r\n};\r\n\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_USER:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        break;\r\n      case LIKE_USER:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        let postIds = '';\r\n        postIds = draft.post;\r\n        dbService.collection('users').doc(draft.data.uid).update({\r\n          user_like_posts: firebase.firestore.FieldValue.arrayUnion(postIds),      \r\n        });\r\n        break;\r\n      case NONELIKE_USER:\r\n        draft.data = action.payload.user[0];\r\n        draft.post = action.payload.postId;\r\n        dbService.collection('users').doc(draft.data.uid).update({\r\n          user_like_posts: draft.data.user_like_posts.filter((elem) => elem !== draft.post),      \r\n        });\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n// thunk\r\nexport const userMiddleware = (userId, postId, type) => async dispatch => {\r\n  try{\r\n    const response = await getUserAPI(userId);\r\n    let arr = {user: [], postId};\r\n    response.forEach(doc => {\r\n      arr.user.push(doc.data());\r\n    });\r\n    if(type === 'init'){\r\n      dispatch(getUser(arr));\r\n      return;\r\n    }\r\n    if(type === 'like'){\r\n      dispatch(likeUser(arr));\r\n    }else{\r\n      dispatch(noneLikeUser(arr));\r\n    };\r\n  }catch(error){\r\n    console.log(error);\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { getLikeAPI } from 'store/apis/postLike';\r\nimport { dbService } from 'firebase.js';\r\nimport { commentDelAPI } from 'store/apis/delete';\r\nconst { produce } = require('immer');\r\n\r\n\r\n// Actions\r\nconst GET_VIEW = 'mypagePost/GET_VIEW';\r\nconst PLUS_VIEW = 'mypagePost/PLUS_VIEW';\r\n\r\n// Action 생성자\r\nexport const getView = (payload) => {\r\n  return {\r\n    type: GET_VIEW,\r\n    payload,\r\n  }\r\n};\r\n\r\nexport const plusView = (payload) => {\r\n  return {\r\n    type: PLUS_VIEW,\r\n    payload,\r\n  }\r\n};\r\n\r\n// Reducer\r\nconst initialState = {\r\n  view: 1,\r\n};\r\n\r\nconst reducer = (prevState = initialState, action) => {\r\n  return produce(prevState, (draft) => {\r\n    switch (action.type) {\r\n      case GET_VIEW:\r\n        draft.view = action.payload.num;\r\n        dbService.collection('post').doc(action.payload.id).update({\r\n          post_view: draft.view,\r\n        });\r\n        if(action.payload.comId){\r\n          dbService.collection('comment').doc(action.payload.comId).update({\r\n            post_view: draft.view,\r\n          });\r\n        }\r\n        break;\r\n      case PLUS_VIEW:\r\n        draft.view = action.payload.num+1;\r\n        dbService.collection('post').doc(action.payload.id).update({\r\n          post_view: draft.view,\r\n        });\r\n        if(action.payload.comId){\r\n          dbService.collection('comment').doc(action.payload.comId).update({\r\n            post_view: draft.view,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        return prevState;\r\n    }\r\n  });\r\n};\r\n\r\n// thunk\r\nexport const viewMiddleware = (id, type) => async dispatch => {\r\n  try{\r\n    const response = await getLikeAPI(id);\r\n    const com = await commentDelAPI(id);\r\n    let obj = {num: 0, id, comId: ''};\r\n    response.forEach(doc => {\r\n      obj.num = doc.data().post_view;\r\n    })\r\n    if(com){\r\n      com.forEach(doc => {\r\n        obj.comId = doc.data().comment_id;\r\n      })\r\n    }else{\r\n      obj.comId = null;\r\n    }\r\n    if(type === 'view'){\r\n      dispatch(plusView(obj));\r\n      return;\r\n    }\r\n    if(type === 'init'){\r\n      dispatch(getView(obj));\r\n    }\r\n  }catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n","import { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport board from \"store/modules/board\";\r\nimport bookmark from \"store/modules/bookmark\";\r\nimport category from \"store/modules/category\";\r\nimport comment from \"store/modules/comment\";\r\nimport del from \"store/modules/delete\";\r\nimport mypageBookmark from \"store/modules/mypageBookmark\";\r\nimport mypageComment from \"store/modules/mypageComment\";\r\nimport mypagePost from \"store/modules/mypagePost\";\r\nimport nav from \"store/modules/nav\";\r\nimport postLike from \"store/modules/postLike\";\r\nimport user from \"store/modules/user\";\r\nimport userLike from \"store/modules/userLike\";\r\nimport view from \"store/modules/view\";\r\n\r\nconst reducer = combineReducers({\r\n  user,\r\n  board,\r\n  comment,\r\n  category,\r\n  nav,\r\n  postLike,\r\n  userLike,\r\n  bookmark,\r\n  mypagePost,\r\n  mypageBookmark,\r\n  mypageComment,\r\n  view,\r\n  del,\r\n});\r\n\r\nconst enhancer =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? compose(\r\n        // 배포할 때\r\n        applyMiddleware(thunk)\r\n      )\r\n    : composeWithDevTools(\r\n        //개발환경일 때\r\n        applyMiddleware(thunk)\r\n      );\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\nexport default store;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset}\r\n\r\n  html, body {\r\n    height : 100%;\r\n  }\r\n\r\n  #root {\r\n    height : 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    width: 100%;\r\n    overflow: hidden;\r\n  }\r\n\r\n  * {\r\n      box-sizing : border-box;\r\n  }\r\n\r\n  a {\r\n    text-decoration : none;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled, { css } from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = styled.div`\r\n  width: 100vw;\r\n  padding-bottom: 1rem;\r\n  `;\r\n\r\n\r\nconst Container = styled.div`\r\n  padding: 1.5rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  ${(props) => {\r\n    if (!props.isPc && props.login) {\r\n      return css`\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n        width: 100vw;\r\n        height: 200px;\r\n        transition: 0.3s;\r\n        transform: ${(props) =>\r\n          props.isNavOpened ? \"translateY(0px)\" : \"translateY(-200px)\"};\r\n        align-items: ${(props) =>\r\n          props.isNavOpened && \"flex-start\"};\r\n      `;\r\n    }\r\n    if(!props.isPc && !props.login){\r\n      return css`\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n        width: 100vw;\r\n        height: 170px;\r\n        transition: 0.3s;\r\n        transform: ${(props) =>\r\n          props.isNavOpened ? \"translateY(0px)\" : \"translateY(-170px)\"};\r\n        align-items: ${(props) =>\r\n          props.isNavOpened && \"flex-start\"};\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100vw;\r\n  font-weight: bold;\r\n  ${(props) => {\r\n    if (!props.isPc) {\r\n      return css`\r\n        flex-direction: ${(props) =>\r\n          props.isNavOpened ? \"row\" : \"column\"};\r\n        justify-content: ${(props) =>\r\n          props.isNavOpened ? \"flex-end\" : \"center\"};\r\n        margin-bottom: ${(props) =>\r\n          props.isNavOpened ? \"0\" : \"2rem\"};\r\n      `;\r\n    }\r\n  }} \r\n  li {\r\n    ${(props) => {\r\n    if (!props.isPc) {\r\n      return css`\r\n        margin: ${(props) =>\r\n          props.isNavOpened ? \"0 0 0 5rem\" : \"0rem 0 1.2rem 0\"};\r\n      `;\r\n      }\r\n    }} \r\n  }\r\n`;\r\n\r\nconst Li = styled.li`\r\n  margin-left: 5rem;\r\n  font-size: 1.5rem;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n  a {\r\n    color: white;\r\n  }\r\n  \r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0;\r\n  font-weight: bold;\r\n  margin-right: 3rem;\r\n  font-size: 1.5rem;\r\n  color: white;\r\n  border: none;\r\n  background: transparent;\r\n  :hover{\r\n    cursor: pointer;\r\n  }\r\n  ${(props) => {\r\n  if (!props.isPc) {\r\n    return css`\r\n      margin-right: ${(props) =>\r\n        props.isNavOpened || \"0\" };\r\n    `;\r\n  }\r\n  }} \r\n`;\r\n\r\nconst StyledNav = styled(NavLink)`\r\n\r\n`;\r\n\r\nexport { Container, Ul, Li, Button, Header, StyledNav };\r\n","import firebase from 'firebase';\r\nimport firebaseService from 'firebase';\r\n\r\nclass AuthService {\r\n  login(providerName) {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n    return firebaseService.auth().signInWithPopup(authProvider);\r\n  }\r\n\r\n  logout() {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  // loginCurrent() {\r\n  //   const loginCurrentUser = new firebase.auth().currentUser;\r\n  //   return firebaseService.auth().currentUser;\r\n  // }\r\n\r\n  loginCurrent() {\r\n    return firebaseService.auth();\r\n  }\r\n\r\n  onAuthChange(onUserChanged) {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 180px;\r\n  height: 55px;\r\n  overflow: hidden;\r\n  margin-top: 1rem;\r\n  `;\r\n\r\nconst Img = styled.img`\r\n  position: absolute;\r\n  top: -63px;\r\n  width: 180px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport { Container, Img };\r\n","export default __webpack_public_path__ + \"static/media/logo.8f0ccc21.png\";","import React from 'react'\r\nimport * as S from \"./Logo.style\";\r\nimport logo from \"assets/images/logo.png\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// logo Image\r\n\r\nexport default function Logo({ isNavOpened }) {\r\n  \r\n  const history = useHistory();\r\n\r\n  const onLogoClick = () => {\r\n    history.push({\r\n      pathname: '/',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <S.Container isNavOpened={isNavOpened}>\r\n      <S.Img src={logo} alt=\"Logo\" onClick={onLogoClick}/>\r\n    </S.Container>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { openNav, closeNav } from 'store/modules/nav';\r\nimport * as S from './NavLinks.style';\r\nimport AuthService from 'auth_service';\r\nimport 'firebase/auth';\r\nimport Logo from 'components/Logo/Logo';\r\nimport firebase from 'firebase';\r\nimport { userMiddleware } from 'store/modules/userLike';\r\n\r\n// 로그아웃\r\nconst authService = new AuthService();\r\nconst onLogout = () => {\r\n  authService.logout();\r\n};\r\n\r\nconst activeStyle = { color: 'red' };\r\n\r\nexport default function NavLinks({ isLoggedIn, isPc, isNavOpened, navToggle }) {\r\n  const auth = firebase.auth();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // 마이페이지에 유저정보 넘기는 목적\r\n  const user = useSelector((state) => state.userLike.data);\r\n  \r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      dispatch(userMiddleware(user.uid, '', 'init'));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <S.Header isPc={isPc} isNavOpened={isNavOpened}>\r\n      <Logo isNavOpened={isNavOpened}/>\r\n      <S.Container isPc={isPc} isNavOpened={isNavOpened} login={isLoggedIn}>\r\n        <S.Ul isPc={isPc}>\r\n          <S.Li>\r\n            <S.StyledNav\r\n              onClick={navToggle}\r\n              to=\"/\"\r\n              activeStyle={activeStyle}\r\n              exact\r\n            >\r\n              Home\r\n            </S.StyledNav>\r\n          </S.Li>\r\n          <S.Li>\r\n            <S.StyledNav\r\n              onClick={navToggle}\r\n              to=\"/CategoryList\"\r\n              activeStyle={activeStyle}\r\n              exact\r\n            >\r\n              Blog\r\n            </S.StyledNav>\r\n          </S.Li>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <S.Li>\r\n                <S.StyledNav\r\n                  to={{\r\n                    pathname: '/mypage',\r\n                    state: { user },\r\n                  }}\r\n                  activeStyle={activeStyle}\r\n                  exact\r\n                >\r\n                  MyPage\r\n                </S.StyledNav>\r\n              </S.Li>\r\n              <S.Li>\r\n                <S.StyledNav to=\"/\" activeStyle={activeStyle} exact>\r\n                  <S.Button isPc={isPc} onClick={onLogout}>Logout</S.Button>\r\n                </S.StyledNav>\r\n              </S.Li>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <S.Li>\r\n                <S.StyledNav to=\"/login\" activeStyle={activeStyle} exact>\r\n                  <S.Button isPc={isPc}>Login</S.Button>\r\n                </S.StyledNav>\r\n              </S.Li>\r\n            </>\r\n          )}\r\n        </S.Ul>\r\n      </S.Container>\r\n    </S.Header>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  top: 0px;\r\n  margin-top: 10px;\r\n  right: 0px;\r\n  width: 50px;\r\n  height: 50px;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  cursor: pointer;\r\n  display: none;\r\n  z-index: 9;\r\n  @media screen and (max-width: 1024px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nconst Line = styled.div`\r\n  margin: 3px 0;\r\n  width: ${(props) => props.width || \"30px\"};\r\n  height: 5px;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  border: 1px solid white;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport { Container, Line };\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { openNav, closeNav } from \"store/modules/nav\";\r\nimport * as S from \"./NavBar.style\";\r\n\r\nexport default function NavBar() {\r\n  const { isNavOpened }  = useSelector(state => state.nav);\r\n  const dispatch = useDispatch();\r\n\r\n  const navToggle = () => {\r\n    if(isNavOpened){\r\n      dispatch(closeNav())\r\n    } else {\r\n      dispatch(openNav())\r\n    }\r\n  }\r\n\r\n  return (\r\n    <S.Container onClick={navToggle}>\r\n      <S.Line></S.Line>\r\n      <S.Line width=\"17px\"></S.Line>\r\n    </S.Container>\r\n  );\r\n}\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  position: relative;\r\n  background-color: transparent;\r\n  height: 100px;\r\n  z-index: 10;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport { Header };\r\n","import React, {useEffect} from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport NavLinks from \"components/NavLinks/NavLinks\";\r\nimport NavBar from \"components/NavBar/NavBar\";\r\nimport { openNav, closeNav } from \"store/modules/nav\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as S from \"./Header.style\";\r\n\r\nexport default function Header({ isLoggedIn }) {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const { isNavOpened } = useSelector((state) => state.nav);\r\n\r\n  const isPc = useMediaQuery({\r\n    query : `(min-width : 1024px)`\r\n  });\r\n\r\n  const navToggle = () => {\r\n    if (isNavOpened) {\r\n      dispatch(closeNav());\r\n    } else {\r\n      dispatch(openNav());\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    if (isPc) {\r\n      dispatch(closeNav());\r\n    }\r\n  },[isPc])\r\n\r\n\r\n  return (\r\n    <S.Header isPc={isPc} isNavOpened={isNavOpened}>\r\n      <NavLinks isLoggedIn={isLoggedIn} isPc={isPc} isNavOpened={isNavOpened} navToggle={navToggle} />\r\n      <NavBar isPc={isPc} />\r\n    </S.Header>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.0d492f9a.jpeg\";","import styled from \"styled-components\";\r\nimport background from \"../assets/images/background.jpeg\";\r\n\r\nexport const Background = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  \r\n`;\r\n\r\nexport const Content = styled.section`\r\n  width: 100%;\r\n  height: calc(100vh - 55px);\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CategoryBox = styled.div`\r\n  position: relative;\r\n  border-radius: 1rem;\r\n  z-index: 1;\r\n\r\n  ${(props) => {\r\n    if (!props.isPc) {\r\n      return css`\r\n        margin-top: 10%;\r\n      `;\r\n    } else {\r\n      return css`\r\n        margin-top: 30%;\r\n      `;\r\n    }\r\n  }}\r\n  h3 {\r\n    color: rgba(255, 255, 255, 0.8);\r\n    font-weight: 700;\r\n    font-size: 2rem;\r\n    margin: 0.5rem;\r\n    text-align: center;\r\n  }\r\n  div {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    margin: 10px;\r\n    border-radius: 10px;\r\n    ${(props) => {\r\n      if (!props.isPc) {\r\n        return css`\r\n          max-height: 50vh;\r\n        `;\r\n      } else {\r\n        return css`\r\n          max-height: 20vh;\r\n        `;\r\n      }\r\n    }}\r\n\r\n    img {\r\n      width: 120%;\r\n    }\r\n  }\r\n`;\r\nconst ArrowStyle = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border-radius: 50%;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  z-index: 2;\r\n  cursor: pointer;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto 0;\r\n  transition: 0.5s;\r\n  :hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n\r\n  ${(props) => {\r\n    if (props.right) {\r\n      return css`\r\n        right: 0;\r\n      `;\r\n    } else {\r\n      return css`\r\n        left: 0;\r\n      `;\r\n    }\r\n  }}\r\n`;\r\nconst Relative = {\r\n  position: \"relative\",\r\n};\r\nconst LinkStyle = styled(Link)`\r\n  text-decoration: none;\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst SkeletonWrapper = styled.div`\r\n  margin-top: 13rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst SkeletonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SkeletonTitle = styled.div`\r\n  width: ${(props) => (props.isPc ? \"70vw\" : \"25vw\")};\r\n  height: ${(props) => (props.isPc ? \"4vh\" : \"2.5vh\")};\r\n  background-color: rgba(100, 100, 100, 0.5);\r\n  margin-left: 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\nconst SkeletonImg = styled.div`\r\n  width: ${(props) => (props.isPc ? \"80vw\" : \"30vw\")};\r\n  height: ${(props) => (props.isPc ? \"40vh\" : \"15vh\")};\r\n  background-color: rgba(100, 100, 100, 0.5);\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n  border-radius: 0.5rem;\r\n`;\r\nexport {\r\n  LinkStyle,\r\n  ArrowStyle,\r\n  Relative,\r\n  CategoryBox,\r\n  SkeletonContainer,\r\n  SkeletonTitle,\r\n  SkeletonImg,\r\n  SkeletonWrapper,\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport * as S from \"./Category.style\";\r\n\r\nexport default function CategorySkeleton() {\r\n  const [categoryCnt, setCategoryCnt] = useState(3);\r\n  const isPc = useMediaQuery({ maxWidth: 820 });\r\n\r\n  useEffect(() => {\r\n    if (isPc) {\r\n      setCategoryCnt(1);\r\n    }\r\n  }, []);\r\n  const skeleton = [];\r\n  for (let i = 0; i < categoryCnt; i++) {\r\n    skeleton.push(\r\n      <S.SkeletonContainer>\r\n        <S.SkeletonTitle isPc={isPc} />\r\n        <S.SkeletonImg isPc={isPc} />\r\n      </S.SkeletonContainer>\r\n    );\r\n  }\r\n\r\n  return <S.SkeletonWrapper>{skeleton}</S.SkeletonWrapper>;\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCategoryThunk } from \"../../store/modules/category\";\r\nimport Slider from \"react-slick\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport * as S from \"./Category.style\";\r\nimport CategorySkeleton from \"./CategorySkeleton\";\r\n\r\nexport default function Category() {\r\n  const category = useSelector((state) => state.category.data);\r\n  const loading = useSelector((state) => state.category.loading);\r\n  const isPc = useMediaQuery({\r\n    query: `(min-width : 820px)`,\r\n  });\r\n\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: isPc ? 3 : 1,\r\n    slidesToScroll: 1,\r\n    nextArrow: <_NextArrow />,\r\n    prevArrow: <_PrevArrow />,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const getCategory = useCallback(() => {\r\n    dispatch(getCategoryThunk());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, [getCategory]);\r\n\r\n  if (loading) return <CategorySkeleton />;\r\n\r\n  return (\r\n    <Slider {...settings}>\r\n      {category.map((cate, index) => (\r\n        <S.CategoryBox key={index} isPc={isPc}>\r\n          <S.LinkStyle to={`/categorylist/${cate.region}`}>\r\n            <h3>{cate.region.replace(\"_\", \" \").toUpperCase()}</h3>\r\n            <div>\r\n              <img src={cate.photo} alt=\"category Img\" />\r\n            </div>\r\n          </S.LinkStyle>\r\n        </S.CategoryBox>\r\n      ))}\r\n    </Slider>\r\n  );\r\n}\r\n\r\nfunction _NextArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <S.ArrowStyle onClick={onClick} right>\r\n      <i className=\"fas fa-arrow-right\" />\r\n    </S.ArrowStyle>\r\n  );\r\n}\r\n\r\nfunction _PrevArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <S.ArrowStyle onClick={onClick}>\r\n      <i className=\"fas fa-arrow-left\" />\r\n    </S.ArrowStyle>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Category from \"components/Category/Category\";\r\n\r\nexport default function CategoryList() {\r\n  return <Category />;\r\n}\r\n","import { css } from \"styled-components\";\r\n\r\nexport const flex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const marginTop = css`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const fontSize = css`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const hideScrollbar = css`\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const cursorPointer = css`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;","import styled, { keyframes } from \"styled-components\";\r\nimport {\r\n  flex,\r\n  marginTop,\r\n  fontSize,\r\n  hideScrollbar,\r\n  cursorPointer,\r\n} from \"./styleConstants.js\";\r\n\r\nconst gray = \"#e3e3e3\";\r\nconst darkGray = \"#afafaf\";\r\nconst red = \"#ed4956\";\r\nconst blue = \"#9980fa\";\r\nconst lightPurple = \"#b8a6ff\";\r\n\r\nconst Container = styled.section`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  ${flex};\r\n  caret-color: transparent;\r\n  background-color: rgb(0, 0, 0, 0.7);\r\n  z-index: 100;\r\n`;\r\n\r\nconst showPost = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(-10rem);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 30rem;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 3rem 0;\r\n  ${flex};\r\n  animation: ${showPost} 500ms;\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal;\r\n  /* filter: blur(5px); */\r\n  @media screen and (max-width: 500px) {\r\n    width: 25rem;\r\n    height: 30rem;\r\n    padding: 2rem 0;\r\n  }\r\n  @media screen and (max-width: 420px) {\r\n    width: 22rem;\r\n    padding: 1rem 0;\r\n  }\r\n  @media screen and (max-width: 360px) {\r\n    width: 20rem;\r\n  }\r\n  ul {\r\n    width: 27rem;\r\n    max-height: 40rem;\r\n    overflow-y: scroll;\r\n    ${flex}\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    ${hideScrollbar};\r\n    @media screen and (max-width: 500px) {\r\n      width: 23rem;\r\n    }\r\n    @media screen and (max-width: 420px) {\r\n      width: 20rem;\r\n    }\r\n    @media screen and (max-width: 360px) {\r\n      width: 18rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.li`\r\n  width: 100%;\r\n  ${flex};\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  background-color: white;\r\n  position: sticky;\r\n  top: 0;\r\n  left: 0;\r\n  padding-bottom: 1rem;\r\n  z-index: 11;\r\n  @media screen and (max-width: 500px) {\r\n    padding-bottom: 0.5rem;\r\n  }\r\n  span {\r\n    ${flex};\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    span {\r\n      font-size: 1.2rem;\r\n      font-weight: bold;\r\n      max-width: 12rem;\r\n      display: block;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      @media screen and (max-width: 500px) {\r\n        font-size: 1rem;\r\n        max-width: 10rem;\r\n      }\r\n      @media screen and (max-width: 370px) {\r\n        font-size: 1rem;\r\n        max-width: 5rem;\r\n      }\r\n    }\r\n    p {\r\n      height: 1.5rem;\r\n      padding: 0.2rem 0.5rem 0rem 0.5rem;\r\n    }\r\n    p:nth-child(2) {\r\n      font-size: 0.8rem;\r\n      color: #009432;\r\n      background-color: #e1facf;\r\n      border-radius: 10px;\r\n      margin: 0 0.5rem;\r\n      line-height: 1.2;\r\n    }\r\n    p:nth-child(3) {\r\n      font-size: 0.7rem;\r\n      color: #883997;\r\n      background-color: #fce3fc;\r\n      border-radius: 10px;\r\n      line-height: 1.5;\r\n    }\r\n    i {\r\n      margin-left: 1rem;\r\n      ${cursorPointer};\r\n    }\r\n  }\r\n  div {\r\n    i {\r\n      outline: none;\r\n      border: none;\r\n      background-color: transparent;\r\n      margin-left: 1rem;\r\n      ${cursorPointer};\r\n    }\r\n    div {\r\n      position: absolute;\r\n    }\r\n  }\r\n`;\r\n\r\nconst editDelToggle = styled.div`\r\n  ${flex};\r\n  ${cursorPointer};\r\n  width: 4rem;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  border: 1px solid ${gray};\r\n  transform: translate(-0.8rem, 1rem);\r\n  box-shadow: 0 0 4px ${gray};\r\n  div {\r\n    position: absolute;\r\n    top: 0;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    background-color: white;\r\n    border-top: 1px solid ${gray};\r\n    border-left: 1px solid ${gray};\r\n    transform: translate(0rem, -0.55rem) rotate(0.125turn);\r\n    box-shadow: 0 0 4px ${gray};\r\n  }\r\n  p {\r\n    padding: 0.5rem 0.5rem;\r\n    font-size: 0.8rem;\r\n  }\r\n  p:nth-child(2) {\r\n    border-bottom: 1px solid ${gray};\r\n    background-color: white;\r\n    z-index: 10;\r\n    color: #409bf0;\r\n  }\r\n  p:nth-child(3) {\r\n    color: ${red};\r\n  }\r\n`;\r\n\r\nconst Profile = styled.li`\r\n  ${flex};\r\n  flex-direction: row;\r\n  margin-top: 2rem;\r\n  img {\r\n    width: 3rem;\r\n    height: 3rem;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n    background-color: pink;\r\n  }\r\n  p {\r\n    margin: 0 0.5rem;\r\n  }\r\n  span {\r\n    font-weight: bold;\r\n    font-size: 0.8rem;\r\n    color: lightgray;\r\n  }\r\n  i {\r\n    font-size: 3rem;\r\n    color: darkgray;\r\n    background: white;\r\n    border-radius: 50%;\r\n    transform: translateX(0.04rem);\r\n  }\r\n`;\r\n\r\nconst Title = styled.li`\r\n  margin-top: 1rem;\r\n  font-size: 1.1rem;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst Content = styled.li`\r\n  width: 100%;\r\n  margin: 1rem 0 2rem 0;\r\n  font-size: 0.9rem;\r\n  line-height: 1.2;\r\n  textarea {\r\n    width: 100%;\r\n    resize: none;\r\n    border: none;\r\n    outline: none;\r\n    background: white;\r\n  }\r\n`;\r\n\r\nconst Like = styled.li`\r\n  width: 100%;\r\n  ${marginTop};\r\n  ${flex};\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  span {\r\n    ${flex};\r\n    flex-direction: row;\r\n    font-size: 0.8rem;\r\n    span {\r\n      font-size: 1rem;\r\n      font-weight: bold;\r\n      margin-bottom: 0.1rem;\r\n    }\r\n    p {\r\n      font-size: 1rem;\r\n      font-weight: bold;\r\n    }\r\n    i {\r\n      font-size: 1rem;\r\n      margin-right: 0.3rem;\r\n      color: ${red};\r\n    }\r\n  }\r\n  i {\r\n    position: relative;\r\n    font-size: 1.2rem;\r\n    ${cursorPointer};\r\n    color: darkgray;\r\n  }\r\n`;\r\n\r\nconst showBookmark = keyframes`\r\n  from {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  75% {\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Bookmark = styled.i`\r\n  position: relative;\r\n  font-size: 1.2rem;\r\n  ${cursorPointer};\r\n  color: darkgray;\r\n  div {\r\n    opacity: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    width: 8rem;\r\n    border: 1px solid lightgray;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n    padding: 0.2rem 0.5rem;\r\n    font-weight: normal;\r\n    font-size: 0.8rem;\r\n    transform: translateY(-1.5rem);\r\n    color: black;\r\n    z-index: 20;\r\n    animation: ${showBookmark} 1500ms;\r\n    animation-iteration-count: 1;\r\n    animation-direction: normal;\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30rem;\r\n  height: 45rem;\r\n  border-radius: 20px;\r\n`;\r\n\r\nconst show = keyframes`\r\n  from {\r\n    transform: scale(1);\r\n  }\r\n\r\n  to {\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\n\r\nconst Alert = styled.div`\r\n  position: absolute;\r\n  width: 20rem;\r\n  background: white;\r\n  border: 1px solid ${blue};\r\n  box-shadow: 0 0 5px ${blue};\r\n  font-weight: bold;\r\n  animation: ${show} 200ms;\r\n  animation-iteration-count: 2;\r\n  animation-direction: normal;\r\n  div:nth-child(1) {\r\n    ${flex};\r\n    justify-content: flex-start;\r\n    height: 12rem;\r\n    i {\r\n      font-size: 4rem;\r\n      margin: 3rem 0 2rem 0;\r\n      color: ${blue};\r\n    }\r\n  }\r\n  div:nth-child(2) {\r\n    ${flex};\r\n    padding: 3rem 0 2rem 0;\r\n    button {\r\n      ${cursorPointer};\r\n      border: none;\r\n      width: 15rem;\r\n      height: 2.5rem;\r\n      font-size: 0.9rem;\r\n      font-weight: bold;\r\n      border-radius: 10px;\r\n    }\r\n    button:hover {\r\n      transform: scale(1.01);\r\n    }\r\n    button:nth-child(1) {\r\n      background: ${lightPurple};\r\n      color: white;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    button:nth-child(2) {\r\n      background: white;\r\n      border: 1px solid ${lightPurple};\r\n      color: ${darkGray};\r\n    }\r\n  }\r\n`;\r\n\r\nconst AlertText1 = styled.p`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst AlertText2 = styled.p`\r\n  color: ${darkGray};\r\n`;\r\n\r\nconst Test = styled.div`\r\n  position: absolute;\r\n  width: 30rem;\r\n  height: 50rem;\r\n  background: rgb(255, 255, 255, 0.5);\r\n  z-index: 20;\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  Contents,\r\n  Header,\r\n  editDelToggle,\r\n  Profile,\r\n  Title,\r\n  Content,\r\n  Like,\r\n  Img,\r\n  Bookmark,\r\n  Alert,\r\n  AlertText1,\r\n  AlertText2,\r\n  Test,\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\nexport const flex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const marginTop = css`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const hideScrollbar = css`\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const cursorPointer = css`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport { flex, marginTop, hideScrollbar, cursorPointer } from \"./styleConstants.js\";\r\n\r\nconst gray = \"#e3e3e3\";\r\nconst blue = \"#409BF0\";\r\nconst red = \"#ED4956\";\r\n\r\nconst Comment = styled.li`\r\n  width: 100%;\r\n  ${marginTop};\r\n  padding-top: 1rem;\r\n  border-top: 1px solid ${gray};\r\n  section {\r\n    position: relative;\r\n    height: 3rem;\r\n    textarea {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 3rem;\r\n      caret-color: black;\r\n      border: 2px solid ${gray};\r\n      border-radius: 10px;\r\n      outline: none;\r\n      padding: 1rem 5rem 1rem 1rem;\r\n      resize: none;\r\n      ${hideScrollbar};\r\n    }\r\n    button {\r\n      position: absolute;\r\n      right: 0;\r\n      width: 5rem;\r\n      height: 3rem;\r\n      border: none;\r\n      background-color: transparent;\r\n      :hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CommentList = styled.div`\r\n  ${flex};\r\n  position: relative;\r\n  margin-top: 0.5rem;\r\n  /* padding-bottom: 0.8rem; */\r\n  justify-content: flex-start;\r\n  flex-direction: row;\r\n  white-space: pre;\r\n  border-bottom: 1px solid #f2f2f2;\r\n  &:last-child {\r\n    border: none;\r\n  }\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n    margin-bottom: 0.2rem;\r\n  }\r\n  /* p:nth-child(1) {\r\n    font-size: 0.7rem;\r\n    color: darkgray;\r\n    word-break: normal;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    margin-bottom: 0.2rem;\r\n  } */\r\n  span, input {\r\n    border: none;\r\n    resize: none;\r\n    outline: none;\r\n    font-size: 0.9rem;\r\n    line-height: 1.5;\r\n    white-space: pre-line;\r\n    margin: 0 0.5rem;\r\n    margin-bottom: 0.2rem;\r\n  }\r\n  input {\r\n    width: 75%;\r\n    border: 1px solid black;\r\n    caret-color: black;\r\n    z-index: 10;\r\n  }\r\n  input::placeholder{\r\n    color: darkgray;\r\n  }\r\n  i:nth-child(2) {\r\n    text-align: end;\r\n    font-size: 1rem;\r\n    margin-left: 0.5rem;\r\n  }\r\n  i:hover {\r\n    ${cursorPointer};\r\n  }\r\n`;\r\n\r\n\r\nconst ProfileIcon = styled.i`\r\n  font-size: 2rem;\r\n  color: darkgray;\r\n  transform: translateX(0.03rem);\r\n  margin-bottom: 0.2rem;\r\n`;\r\n\r\nconst Content = styled.span`\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  span:nth-child(1) {\r\n    ${flex};\r\n    align-items: flex-start;\r\n    margin-bottom: 0;\r\n  }\r\n  p:nth-child(1) {\r\n    font-size: 0.8rem;\r\n    color: darkgray;\r\n    word-break: normal;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    margin-bottom: 0.2rem;\r\n  }\r\n`;\r\n\r\nconst EditDel = styled.section`\r\n  ${flex};\r\n  width: 5%;\r\n`;\r\n\r\nconst Check = styled.div`\r\n  position: absolute;\r\n  transform: translateX(1.2rem);\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  padding: 0.5rem 0;\r\n  ${cursorPointer};\r\n  color: ${blue};\r\n  margin-bottom: 0.2rem;\r\n`;\r\n\r\nconst Toggle = styled.div`\r\n  position: absolute;\r\n  ${flex};\r\n  background: white;\r\n  flex-direction: row;\r\n  border: 1px solid ${gray};\r\n  box-shadow: 0 0 4px ${gray};\r\n  border-radius: 10px;\r\n  transform: translate(-4rem, 0rem);\r\n  div {\r\n    font-size: 0.8rem;\r\n  }\r\n  div:nth-child(1){\r\n    padding: 0.5rem 0.5rem 0.5rem 1rem;\r\n    border-right: 1px solid ${gray};\r\n    color: ${blue};\r\n    ${cursorPointer};\r\n  }\r\n  div:nth-child(2){\r\n    padding: 0.5rem 1rem 0.5rem 0.5rem;\r\n    z-index: 10;\r\n    border-radius: 10px;\r\n    background: white;\r\n    color: ${red};\r\n    ${cursorPointer};\r\n  }\r\n  div:nth-child(3){\r\n    position: absolute;\r\n    right: 0;\r\n    width: 0.5rem;\r\n    height: 0.5rem;\r\n    background: white;\r\n    border: 1px solid ${gray};\r\n    box-shadow: 0 0 4px ${gray};\r\n    transform: translateX(0.25rem) rotate(0.125turn);\r\n  }\r\n`;\r\n\r\nconst Time = styled.p`\r\n  font-size: 0.7rem;\r\n  color: #d8d8d8;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport {\r\n  Comment,\r\n  Content,\r\n  CommentList,\r\n  ProfileIcon,\r\n  EditDel,\r\n  Toggle,\r\n  Check,\r\n  Time,\r\n}","function timeNotice(time) {\r\n  const milliSeconds = new Date() - time;\r\n  const seconds = milliSeconds / 1000;\r\n  if (seconds < 60) {\r\n    return `방금 전`;\r\n  }\r\n  const minutes = seconds / 60;\r\n  if (minutes < 60) {\r\n    return `${Math.floor(minutes)}분 전`;\r\n  }\r\n  const hours = minutes / 60;\r\n  if (hours < 24) {\r\n    return `${Math.floor(hours)}시간 전`;\r\n  }\r\n  const days = hours / 24;\r\n  if (days < 7) {\r\n    return `${Math.floor(days)}일 전`;\r\n  }\r\n  const weeks = days / 7;\r\n  if (weeks < 5) {\r\n    return `${Math.floor(weeks)}주 전`;\r\n  }\r\n  const months = days / 30;\r\n  if (months < 12) {\r\n    return `${Math.floor(months)}개월 전`;\r\n  }\r\n  const years = days / 365;\r\n  return `${Math.floor(years)}년 전`;\r\n}\r\n\r\nexport default timeNotice;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { dbService } from \"firebase.js\";\r\nimport firebase from \"firebase\";\r\nimport timeCalculate from \"utils/timeCalculate\";\r\nimport * as S from \"./Comment.style\"; \r\n\r\n\r\nconst CommentList = ({ com, add, onEdit, onDelete, onScroll, render, user }) =>{\r\n  let [editDelete, setEditDelete] = useState(false);\r\n  let [edit, setEdit] = useState(false);\r\n  let userCheck = com.user_uid === user.uid;\r\n\r\n  const container = useRef();\r\n  const input = useRef();\r\n\r\n  const onEnter = (e) => {\r\n    if(e.key !== 'Enter' | e.key === 'Enter' && e.shiftKey){\r\n      return;\r\n    }\r\n    if(e.key === 'Enter'){\r\n      e.preventDefault();\r\n      onEditFrame(e.target.value, e.target.parentElement.id);\r\n    }\r\n  }\r\n\r\n  const onDoneEdit = () => { \r\n    onEditFrame(input.current.value, container.current.id, input.current.placeholder);\r\n  };\r\n  \r\n  const onEditFrame = async(value, i, placeholder) => {\r\n    if(!value){\r\n      await dbService.collection('comment').doc(i).update({\r\n        comment_content: placeholder\r\n      });\r\n    }\r\n    if(value){\r\n      await dbService.collection('comment').doc(i).update({\r\n        comment_content: value\r\n      });\r\n    }\r\n    onEdit();\r\n    setEdit(false);\r\n    setEditDelete(false);\r\n  }\r\n\r\n  const onStartEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const onDeleteList = async(e) => {\r\n    if(!window.confirm(\"정말 삭제하시겠습니까?\")){\r\n      setEditDelete(!editDelete);\r\n      return;\r\n    }\r\n    const target = e.target;\r\n    let i = target.parentElement.parentElement.parentElement.id;\r\n\r\n    await dbService.collection('comment').doc(i).delete();\r\n    await dbService.collection('users').doc(user.uid).update({\r\n      user_write_comments: firebase.firestore.FieldValue.arrayRemove(i),\r\n    });\r\n    onDelete();\r\n  }\r\n\r\n  const onEditDelete = () => {\r\n    setEditDelete(!editDelete);\r\n  }\r\n\r\n\r\n  //댓글 추가시 스크롤 맨 밑으로\r\n  useEffect(() => {  \r\n    if(add != 'add'){\r\n      return;\r\n    }\r\n    onScroll();\r\n  },[render]);\r\n\r\n\r\n  return (\r\n    <S.CommentList ref={container} id={com.comment_id} key={com.comment_id}>\r\n      {com.user_image ? <img src={com.user_image} alt=\"프로필 이미지입니다\"></img> : <S.ProfileIcon className=\"fas fa-user-circle\"></S.ProfileIcon>}\r\n      {edit ?\r\n      (<input ref={input} placeholder={com.comment_content} onKeyPress={e=>onEnter(e)}/>) :\r\n      <S.Content>\r\n        <span>{com.comment_writer ? <p>{com.comment_writer}</p> : <p>익명</p>}<S.Time>{timeCalculate(com.time)}</S.Time></span>\r\n        <span>{com.comment_content}</span>\r\n      </S.Content>}\r\n      <S.EditDel>\r\n        {editDelete &&\r\n          <>\r\n          <S.Toggle>\r\n            {!edit && <div onClick={onStartEdit}>수정</div>}\r\n            {!edit && <div onClick={e=>onDeleteList(e)}>삭제</div>}\r\n            <div></div>\r\n          </S.Toggle>\r\n          </>\r\n        }\r\n        {edit && <S.Check onClick={onDoneEdit}>수정완료</S.Check>}\r\n        {userCheck && <i className=\"fas fa-ellipsis-v\" onClick={onEditDelete}></i>}\r\n      </S.EditDel>\r\n      {/* <S.Time>{timeCalculate(com.time)}</S.Time> */}\r\n    </S.CommentList>\r\n  )\r\n}\r\n\r\nexport default CommentList;","import React, { memo, useRef, useState, useEffect } from 'react';\r\nimport * as S from \"./Comment.style\"; \r\nimport { commentAdd, commentEdit, commentDelete } from 'store/modules/comment';\r\nimport { dbService } from \"firebase.js\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { commentMiddleware } from 'store/modules/comment';\r\nimport CommentList from './CommentList';\r\nimport firebase from \"firebase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n\r\nconst Comment = memo(({ postId, postregion, userDB, postLike, postView}) => {\r\n\r\n  const auth = firebase.auth();\r\n\r\n  const uuid = uuidv4();\r\n\r\n  const textarea = useRef();\r\n  const postBtn = useRef();\r\n  const comment = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  let allComment = useSelector(state => state.comment.data);\r\n\r\n  let [render, setRender] = useState(false);\r\n  const [user, setUser] = useState('');\r\n\r\n  // 댓글 추가 시 스크롤 내리기 용도\r\n  let [add, setAdd] = useState('');\r\n\r\n  // comment쓰는 textarea의 값 null check에 따른 '게시'버튼 색깔 변화 \r\n  const onNotPost = () => {\r\n    postBtn.current.style.color = \"black\";\r\n    postBtn.current.style.fontWeight = \"normal\";\r\n  };\r\n\r\n  const onDoPost = () => {\r\n    postBtn.current.style.color = \"blue\";\r\n    postBtn.current.style.fontWeight = \"bold\";\r\n  };\r\n\r\n  const onChangePostBtn = () => {\r\n    if(!textarea.current.value){\r\n      onNotPost();\r\n      return;\r\n    }\r\n    onDoPost();\r\n  };\r\n\r\n\r\n  // 댓글 쓰고 엔터 눌렀을 때\r\n  const onEnter = (e) => {\r\n    if(e.key != 'Enter' | e.key === 'Enter' && e.shiftKey){\r\n      return;\r\n    }\r\n    if(e.key === 'Enter'){\r\n      e.preventDefault();\r\n      onAdd();\r\n    }\r\n  };\r\n\r\n  const onAdd = async() => {\r\n    if(!textarea.current.value){\r\n      return;\r\n    }\r\n\r\n    let time = Date.now();\r\n\r\n    await dbService.collection('comment').doc(uuid).set({\r\n      post_id: postId,\r\n      post_region: postregion,\r\n      comment_id: uuid,\r\n      comment_content: textarea.current.value,\r\n      comment_like: 0,\r\n      user_uid: user.uid,\r\n      user_image: userDB.user_image,\r\n      comment_writer: userDB.name || user.displayName,\r\n      post_like: postLike,\r\n      post_view: postView,\r\n      time,\r\n    })\r\n\r\n\r\n    await dbService.collection('users').doc(user.uid).update({\r\n      user_write_comments: firebase.firestore.FieldValue.arrayUnion(uuid),      \r\n    });\r\n\r\n    onNotPost();\r\n    setAdd('add');\r\n    setRender(!render);\r\n    textarea.current.value = '';\r\n  };\r\n\r\n  const onDelete = () => {\r\n    setAdd('');\r\n    setRender(!render);\r\n  };\r\n\r\n  const onEdit = () => {\r\n    setAdd('');\r\n    setRender(!render);\r\n  };\r\n\r\n  const onScroll = () => {\r\n    comment.current.lastElementChild.scrollIntoView({behavior: \"smooth\", block: \"end\"});\r\n  };\r\n\r\n  useEffect(()=>{\r\n    dispatch(commentMiddleware(postId));\r\n  },[render]);\r\n\r\n  useEffect(()=>{\r\n    auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n    });\r\n  },[]);\r\n\r\n  return (\r\n    <S.Comment ref={comment}>\r\n      <section>\r\n        <textarea\r\n          ref={textarea}\r\n          placeholder=\"댓글을 입력해주세요\"\r\n          onKeyPress={e=>onEnter(e)}\r\n          onChange={onChangePostBtn}>\r\n        </textarea>\r\n        <button ref={postBtn} type=\"submit\" onClick={onAdd}>게시</button>\r\n      </section>\r\n      {allComment && allComment.slice(0, allComment.length).sort((a, b)=>a.time - b.time).map((com)=>{\r\n          return (\r\n            <CommentList\r\n            key={com.comment_id}\r\n            com={com}\r\n            add={add}\r\n            onEdit={onEdit}\r\n            onDelete={onDelete}\r\n            onScroll={onScroll}\r\n            render={render}\r\n            user={user}/>\r\n          )\r\n      })}\r\n    </S.Comment>\r\n  )\r\n})\r\n\r\nexport default Comment;","import ContentLoader from \"react-content-loader\";\r\n\r\nconst ImageLoader = () => {\r\n  return (\r\n  <ContentLoader\r\n    width= {400}\r\n    height= {400}\r\n    viewBox = \"0 0 400 400\"\r\n    speed={2}\r\n    gradientRatio ={2}\r\n    backgroundColor=\"#F6F8FA\"\r\n    foregroundColor=\"#6f79a8\"\r\n  >\r\n    <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"432\" height=\"400\" /> \r\n  </ContentLoader>\r\n  );\r\n}\r\n\r\nexport default ImageLoader","import styled from 'styled-components'\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst StyledSlider = styled(Slider)`\r\n  width : 100%;\r\n  height : 25rem;\r\n  .slick-list {\r\n    width : 100%;\r\n    height : 100%;\r\n  }\r\n  .slick-track{\r\n    width : 100%;\r\n    height : 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .slick-slide {\r\n    img {\r\n      width: 100%;\r\n      height : 25rem;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n  .slick-prev {\r\n    left : -10px;\r\n    z-index : 10;\r\n  }\r\n  .slick-next {\r\n    right : 10px;\r\n    z-index : 10;\r\n  }\r\n  .slick-prev::before, .slick-next::before {\r\n    position : absolute;\r\n    top : 0;\r\n    bottom : 0;\r\n    color: lightgray;\r\n    border-radius: 50%;\r\n  }\r\n  p {\r\n    right: 0;\r\n  }\r\n`;\r\n\r\nconst Li = styled.li`\r\n  position: relative;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  p {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    /* opacity: 1; */\r\n    p{\r\n      transform: translate(-0.5rem, 2rem);\r\n      color: white;\r\n      z-index: 20;\r\n      background: rgb(0,0,0,0.5);\r\n      color: white;\r\n      border-radius: 5px;\r\n      padding: 0.2rem 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  Li,\r\n  Div,\r\n  StyledSlider,\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport { storageService } from 'firebase.js';\r\nimport ImageLoader from './ContentPlaceholder';\r\nimport * as S from './PostSlider.style'\r\n\r\nconst PostSlider = ({postImages}) => {\r\n\r\n  const img = useRef();\r\n  const count = useRef();\r\n  \r\n  // post에 저장되어있던 image들의 url을 저장\r\n  const [imageURL, setImageURL] = useState([]);\r\n  const [sliderReady, setSliderReady] = useState(false);\r\n  let [num, setNum] = useState('');\r\n\r\n  useEffect(()=>{\r\n    // 현재 post가 가지고 있는 것들을 url로 받아옴\r\n    const imageURLCheck = async () => {\r\n      const result = []\r\n      for(let imageURL of postImages){\r\n        let imageRef = storageService.refFromURL(imageURL)\r\n        let url = await imageRef.getDownloadURL()\r\n        result.push(url)\r\n      }\r\n      return result;\r\n    }\r\n    imageURLCheck()\r\n      .then((value)=>{\r\n      setImageURL(value) // url check하고서 동기적으로 imageUrl에 넣어줌\r\n    }).catch((error)=>{\r\n      console.error(error)\r\n    })\r\n    setTimeout(() => setSliderReady(true), 1400)\r\n  },[])\r\n\r\n  const onMouseDown = () => {\r\n    img.current.style.cursor = 'grab';\r\n  }\r\n\r\n  const onMouseUp = () => {\r\n    img.current.style.cursor = 'default';\r\n  }\r\n\r\n  // const onMouseEnter = () => {\r\n  //   if(count.current === undefined){\r\n  //     return;\r\n  //   }\r\n  //   count.current.style.opacity = '1';\r\n  // }\r\n\r\n  // const onMouseLeave = () => {\r\n  //   if(count.current === undefined){\r\n  //     return;\r\n  //   }\r\n  //   count.current.style.opacity = '0';\r\n  // }\r\n\r\n  const setting = {\r\n    dots: false,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    swipToSlide : true,\r\n    lazyLoad : true,\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(postImages.length != 0){\r\n      img.current.style.width = '27rem';\r\n      img.current.style.height = '100%';\r\n      img.current.style.margin = '0';\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(postImages.length != 0) &&\r\n      <S.Li\r\n        ref={img}\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        // onMouseEnter={onMouseEnter}\r\n        // onMouseLeave={onMouseLeave}\r\n        >\r\n        {sliderReady || <ImageLoader/>}\r\n        <S.StyledSlider {...setting}>\r\n          {sliderReady && imageURL.map((image, index)=>{\r\n            return (\r\n              <S.Div key={image}>\r\n                <p ref={count}><p>{index+1}/{imageURL.length}</p></p>\r\n                <img src={image} alt=\"여행사진\" />\r\n              </S.Div>\r\n            );\r\n          })}\r\n        </S.StyledSlider>\r\n      </S.Li>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostSlider;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst primaryColor = \"#1a46a0\";\r\nconst gray = \"#e3e3e3\";\r\nconst lightBlack = \"#333333\";\r\n\r\nconst Container = styled.div`\r\n  width: 80vw;\r\n  background-color: white;\r\n  border-radius: 0.3rem;\r\n  transition: ${(props) => (props.visible ? \"0.5s\" : \"1s\")};\r\n  overflow: hidden;\r\n  opacity: ${(props) => (props.visible ? 1 : 1)};\r\n  transform: ${(props) =>\r\n    props.visible ? \"translateY(0)\" : \"translateY(-75rem)\"};\r\n  z-index: ${(props) => (props.visible ? 100 : -1)};\r\n  &::-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n\r\n  p {\r\n    margin-top: 1rem;\r\n    margin-left: 1rem;\r\n  }\r\n  form {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  /* input, */\r\n  textarea,\r\n  select {\r\n    margin: 1rem 0.5rem 0;\r\n    border: 2px solid ${gray};\r\n    border-radius: 5px;\r\n    /* outline: none; */\r\n    option {\r\n      color: ${lightBlack};\r\n    }\r\n  }\r\n  select:hover {\r\n    cursor: pointer;\r\n  }\r\n  input:last-child {\r\n    margin-bottom: 1rem;\r\n  }\r\n  textarea {\r\n    resize: vertical;\r\n    min-height: 15rem;\r\n    max-height: 28rem;\r\n    caret-color: black;\r\n    ::-webkit-scrollbar {\r\n      width: 10px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      background-color: lightgray;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      border-radius: 3px;\r\n      background-color: darkgray;\r\n    }\r\n    ::-webkit-scrollbar-button {\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n    ${(props) =>\r\n      !props.isHeight &&\r\n      css`\r\n        height: 40vh;\r\n    `}\r\n  }\r\n`;\r\nconst TitleInput = styled.input`\r\n  margin: 1rem 0.5rem 0;\r\n  border: 2px solid ${gray};\r\n  border-radius: 5px;\r\n  caret-color: black;\r\n`;\r\nconst ImgUpload = styled.div`\r\n  height: 1.6rem;\r\n  position: relative;\r\n  margin: 1rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  label {\r\n    position: absolute;\r\n    top: 50%;\r\n    margin-top: calc(-1rem / 2);\r\n    left: 0.5rem;\r\n    color: white;\r\n    font-size: 0.8rem;\r\n    background: ${primaryColor};\r\n    padding: 0.4rem 0.8rem;\r\n    border-radius: 10px;\r\n    transition: 0.3s;\r\n    :hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  p {\r\n    margin: 0.7rem 0 0 6rem;\r\n    font-size: 0.8rem;\r\n    color: red;\r\n  }\r\n  input {\r\n    display: none;\r\n  }\r\n`;\r\nconst ImgWrapper = styled.div`\r\n  margin: 0.5rem 0.5rem 0;\r\n  height: 80px;\r\n  border: 2px solid ${gray};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  ::-webkit-scrollbar {\r\n      height: 0.4rem;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n      height: 0.4rem;\r\n      border-radius: 40px;\r\n      background-color: transparent;\r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n      height: 0.4rem;\r\n      border-radius: 40px;\r\n      background-color: skyblue;\r\n    }\r\n    ::-webkit-scrollbar-button {\r\n      width: 0;\r\n      height: 0;\r\n    }\r\n  div {\r\n    position: relative;\r\n    i {\r\n      position: absolute;\r\n      top: 0.3rem;\r\n      right: 0.3rem;\r\n      font-size: 0.8rem;\r\n      width: 1rem;\r\n      height: 1rem;\r\n      background: #ff0000;\r\n      color: white;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      line-height: 1.3;\r\n      :hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    img {\r\n      margin: 0.2rem;\r\n      width: 70px;\r\n      height: 70px;\r\n    }\r\n  }\r\n  ${(props) => {\r\n    if (props.attachment === undefined) {\r\n      return;\r\n    }\r\n    if (props.attachment.length === 0) {\r\n      return css`\r\n        display: none;\r\n      `;\r\n    } else {\r\n      return css`\r\n        display: flex;\r\n      `;\r\n    }\r\n  }}\r\n\r\n  ${(props) => {\r\n    if (props.photo === undefined) {\r\n      return;\r\n    }\r\n    if (props.attachment.length === 0){\r\n      if (props.photo.length === 0) {\r\n        return css`\r\n          display: none;\r\n        `;\r\n      } else {\r\n        return css`\r\n          display: flex;\r\n        `;\r\n      }\r\n    }\r\n  }}\r\n`;\r\n\r\nconst BtnWrapper = styled.div`\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n  input {\r\n    background-color: ${primaryColor};\r\n    width: 8rem;\r\n    font-weight: 700;\r\n    color: white;\r\n    height: 2rem;\r\n    border: none;\r\n    font-size: 1.1rem;\r\n    border: none;\r\n    text-align: center;\r\n    transition: 0.3s;\r\n    margin: auto;\r\n    border-radius: 5px;\r\n    :hover {\r\n      cursor: pointer;\r\n      border: 1px solid ${primaryColor};\r\n      color: ${primaryColor};\r\n      background-color: transparent;\r\n    }\r\n\r\n    :nth-child(1) {\r\n      color: #555555;\r\n      margin-right: 1rem;\r\n      background-color: ${gray};\r\n      :hover {\r\n        border: 1px solid ${lightBlack};\r\n        background-color: transparent;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Wrapper = styled.span`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin: 1rem 0 0 0.5rem;\r\n  img {\r\n    width: 2rem;\r\n    height: 2rem;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-right: 0.3rem;\r\n  }\r\n  span {\r\n    margin-left: 0.2rem;\r\n  }\r\n`;\r\nconst NamelessIcon = styled.i`\r\n  font-size: 2rem;\r\n  color: darkgray;\r\n  left: 0;\r\n  margin: 0 0.3rem 0 0.2rem;\r\n`;\r\nconst Name = styled.span`\r\n  color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst CloseModal = styled.i`\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  right: 0.5rem;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  transition: ${(props) => (props.visible ? '0.5s' : '1s')};\r\n  opacity: ${(props) => (props.visible ? 1 : 0)};\r\n  transform: ${(props) =>\r\n    props.visible ? \"translateY(0)\" : \"translateY(-88rem)\"};\r\n  z-index: ${(props) => (props.visible ? 90 : -2)};\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  Overlay,\r\n  Wrapper,\r\n  Name,\r\n  ImgWrapper,\r\n  NamelessIcon,\r\n  CloseModal,\r\n  ImgUpload,\r\n  BtnWrapper,\r\n  TitleInput,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nconst style = {\r\n  textAlign: \"center\",\r\n  marginTop: \"1rem\",\r\n};\r\n\r\nexport default function Loading({ width, height }) {\r\n  return (\r\n    <Loader\r\n      type=\"Oval\"\r\n      color=\"#3d66ba\"\r\n      height={width}\r\n      width={height}\r\n      style={style}\r\n      // timeout={10000}\r\n    />\r\n  );\r\n}\r\n","import { useRef, useState } from \"react\";\r\nimport * as S from \"./WriteModal.style\";\r\nimport { dbService, storageService } from \"firebase.js\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loading from \"../../Loading/Loading\";\r\n\r\nexport default function UpdateModal({\r\n  visible,\r\n  isVisible,\r\n  postData,\r\n  login,\r\n  isHeight,\r\n  likePost,\r\n}) {\r\n  const {\r\n    post_date,\r\n    post_region,\r\n    post_title,\r\n    post_content,\r\n    post_photo,\r\n    post_id,\r\n    post_writer,\r\n    post_uid,\r\n    post_view,\r\n    post_like,\r\n    post_profile_img,\r\n  } = postData;\r\n  const [post, setPost] = useState(post_content);\r\n  const [title, setTitle] = useState(post_title);\r\n  const [region, setRegion] = useState(post_region);\r\n  const [photo, setPhoto] = useState(post_photo);\r\n  const [load, setLoad] = useState(false);\r\n\r\n  const postRef = useRef();\r\n  const titleRef = useRef();\r\n  const [attachment, setAttachment] = useState([]);\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"textarea\") {\r\n      setPost(value);\r\n    } else if (name === \"region\") {\r\n      setRegion(value);\r\n    } else if (name === \"title\") {\r\n      setTitle(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title) {\r\n      alert(\"제목을 입력해 주세요.\");\r\n      postRef.current.focus();\r\n    } else if (!post) {\r\n      alert(\"내용을 입력해 주세요.\");\r\n      titleRef.current.focus();\r\n    } else if (!region) {\r\n      alert(\"지역을 선택해 주세요.\");\r\n    } else {\r\n      setLoad(true);\r\n      let attachmentUrl = photo;\r\n      if (attachment) {\r\n        for (let i = 0; i < attachment.length; i++) {\r\n          const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${login.uid}/${uuidv4()}`);\r\n          const response = await attachmentRef.putString(\r\n            attachment[i],\r\n            \"data_url\"\r\n          );\r\n          attachmentUrl.push(await response.ref.getDownloadURL());\r\n        }\r\n      }\r\n\r\n      const updateData = {\r\n        post_title: title,\r\n        post_content: post,\r\n        post_writer,\r\n        post_uid,\r\n        post_date,\r\n        post_id,\r\n        post_photo: attachmentUrl,\r\n        post_profile_img,\r\n        post_region: region,\r\n        post_view,\r\n        post_like,\r\n        post_update: true,\r\n      };\r\n\r\n      await dbService.collection(\"post\").doc(post_id).set(updateData);\r\n\r\n      isVisible();\r\n      setLoad(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  const onFileChange = (e) => {\r\n    const { files } = e.target;\r\n    let file;\r\n    let fileURLs = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      file = files[i];\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        fileURLs.push(reader.result);\r\n        setAttachment([...fileURLs]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  // 추가된 이미지 삭제\r\n  const removeAttachment = (e) => {\r\n    setAttachment(attachment.filter((at) => at !== e));\r\n  };\r\n  // 등록된 이미지들 중 삭제\r\n  const removePhoto = (e) => {\r\n    setPhoto(photo.filter((at) => at !== e));\r\n  };\r\n\r\n  const onOverlayClick = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const close = () => {\r\n    setPost(post_content);\r\n    setTitle(post_title);\r\n    setRegion(post_region);\r\n    setPhoto(post_photo);\r\n    setAttachment([]);\r\n    isVisible();\r\n  }\r\n\r\n  //창 닫기\r\n  const closeModal = () => {\r\n    const ok = window.confirm(\r\n      \"창을 닫으면 내용이 초기화가 됩니다. 창을 닫으시겠습니까?\"\r\n    );\r\n    if (ok) {\r\n      close();\r\n    }\r\n  };\r\n\r\n  const closeUpdateModal = () => {\r\n    const ok = window.confirm(\r\n      \"게시글 수정을 취소하시겠습니까?\"\r\n    );\r\n    if (ok) {\r\n      close();\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <S.Overlay visible={visible} onClick={(e) => onOverlayClick(e)}>\r\n        <S.Container visible={visible} isHeight={isHeight}>\r\n          <S.CloseModal onClick={closeModal} className=\"fas fa-times\" />\r\n\r\n          {login && (\r\n            <S.Wrapper>\r\n              {likePost.user_image ? (\r\n                <>\r\n                  <img\r\n                    src={likePost.user_image}\r\n                    alt=\"프로필 이미지입니다\"\r\n                  ></img>\r\n                  <S.Name>{likePost.name || login.displayName}</S.Name>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <S.NamelessIcon className=\"fas fa-user-circle\" />\r\n                  <S.Name>{likePost.name || login.displayName}</S.Name>\r\n                </>\r\n              )}\r\n            </S.Wrapper>\r\n          )}\r\n          <form onSubmit={onSubmit}>\r\n            <S.TitleInput\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={title}\r\n              ref={titleRef}\r\n              onChange={onChange}\r\n              placeholder=\"제목을 입력해 주세요.\"\r\n            />\r\n            <textarea\r\n              name=\"textarea\"\r\n              value={post}\r\n              ref={postRef}\r\n              onChange={onChange}\r\n              placeholder=\"내용을 입력해주세요.\"\r\n              rows=\"10\"\r\n            />\r\n            <select name=\"region\" value={region} onChange={onChange}>\r\n              <option value=\"\">지역을 선택해 주세요.</option>\r\n              <option value=\"asia\">Asia</option>\r\n              <option value=\"north_america\">North America</option>\r\n              <option value=\"south_america\">South America</option>\r\n              <option value=\"africa\">Africa</option>\r\n              <option value=\"europe\">Europe</option>\r\n              <option value=\"oceania\">oceania</option>\r\n              <option value=\"antarctica\">Antarctica</option>\r\n            </select>\r\n            <S.ImgUpload>\r\n              <label for=\"inputFile\">사진 선택</label>\r\n              <p>※ ctrl로 사진을 여러장 선택하실 수 있습니다.</p>\r\n              <input\r\n                multiple\r\n                id=\"inputFile\"\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                onChange={onFileChange}\r\n                name=\"fileNames[]\"\r\n              />\r\n            </S.ImgUpload>\r\n            <S.ImgWrapper photo={photo} attachment={attachment}>\r\n              {photo &&\r\n                photo.map((atta, i) => (\r\n                  <div>\r\n                    <i\r\n                      onClick={() => removePhoto(atta)}\r\n                      className=\"fas fa-times\"\r\n                    />\r\n                    <img key={i} src={atta} alt=\"올릴 이미지\" />\r\n                  </div>\r\n                ))}\r\n              {attachment &&\r\n                attachment.map((atta, i) => (\r\n                  <div>\r\n                    <i\r\n                      onClick={() => removeAttachment(atta)}\r\n                      className=\"fas fa-times\"\r\n                    />\r\n                    <img key={i} src={atta} alt=\"올릴 이미지\" />\r\n                  </div>\r\n                ))}\r\n            </S.ImgWrapper>\r\n            {load ? (\r\n              <Loading width=\"30\" height=\"30\" />\r\n            ) : (\r\n              <S.BtnWrapper>\r\n                <input type=\"button\" onClick={closeUpdateModal} value=\"취소\" />\r\n                <input type=\"submit\" value=\"수정\" />\r\n              </S.BtnWrapper>\r\n            )}\r\n          </form>\r\n        </S.Container>\r\n      </S.Overlay>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport * as S from \"./WriteModal.style\";\r\nimport { dbService, storageService } from \"firebase.js\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"firebase\";\r\nimport { userMiddleware } from \"store/modules/userLike\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UpdateModal from \"./UpdateModal\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport Loading from \"../../Loading/Loading\";\r\n\r\nexport default function WriteModal({ visible, isVisible, postData }) {\r\n  const auth = firebase.auth();\r\n  const isHeight = useMediaQuery({ maxHeight: 765 });\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [post, setPost] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\");\r\n  const [attachment, setAttachment] = useState([]);\r\n  const [load, setLoad] = useState(false);\r\n  const [login, setLogin] = useState(\"\");\r\n\r\n  const postRef = useRef();\r\n  const titleRef = useRef();\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === \"textarea\") {\r\n      setPost(value);\r\n    } else if (name === \"region\") {\r\n      setRegion(value);\r\n    } else if (name === \"title\") {\r\n      setTitle(value);\r\n    }\r\n  };\r\n  // // 해당 유저가 좋아요한 post의 post_id 배열(users collection에 담김)\r\n  let likePost = useSelector((state) => state.userLike.data);\r\n  // // 해당 유저가 북마크한 post의 post_id 배열(users collection에 담김)\r\n  let bookmark = useSelector((state) => state.userLike.data);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!title) {\r\n      alert(\"제목을 입력해 주세요.\");\r\n      postRef.current.focus();\r\n    } else if (!post) {\r\n      alert(\"내용을 입력해 주세요.\");\r\n      titleRef.current.focus();\r\n    } else if (!region) {\r\n      alert(\"지역을 선택해 주세요.\");\r\n    } else {\r\n      setLoad(true);\r\n      let attachmentUrl = [];\r\n      if (attachment) {\r\n        for (let i = 0; i < attachment.length; i++) {\r\n          const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${login.uid}/${uuidv4()}`);\r\n          const response = await attachmentRef.putString(\r\n            attachment[i],\r\n            \"data_url\"\r\n          );\r\n          attachmentUrl.push(await response.ref.getDownloadURL());\r\n        }\r\n      }\r\n\r\n      const ID = login.uid;\r\n      const uuid = uuidv4();\r\n\r\n      // users collection의 user_write_posts에 post_id 추가\r\n      await dbService\r\n        .collection(\"users\")\r\n        .doc(ID)\r\n        .update({\r\n          user_write_posts: firebase.firestore.FieldValue.arrayUnion(uuid),\r\n        });\r\n\r\n      // 정보 올리기\r\n\r\n      const writeData = {\r\n        post_title: title,\r\n        post_content: post,\r\n        post_writer: likePost.name || login.displayName,\r\n        post_uid: login.uid,\r\n        post_date: Date.now(),\r\n        post_id: uuid,\r\n        post_photo: attachmentUrl,\r\n        post_profile_img: likePost.user_image || login.photoURL,\r\n        post_region: region,\r\n        post_view: 0,\r\n        post_like: 0,\r\n        uid: login.uid,\r\n        post_update: false,\r\n      };\r\n\r\n      await dbService.collection(\"post\").doc(uuid).set(writeData);\r\n      setPost(\"\");\r\n      setTitle(\"\");\r\n      setRegion(\"\");\r\n      setAttachment([]);\r\n      isVisible();\r\n      setLoad(false);\r\n      if (location.pathname === `/categorylist/${region}`) {\r\n        // 모달 띄우기\r\n        history.push({\r\n          pathname: `/categorylist/${region}`,\r\n          search: `?id=${uuid}`,\r\n          state: {\r\n            like: likePost.user_like_posts,\r\n            bookmark: bookmark.user_bookmark_posts,\r\n            postData,\r\n            write: 'write',\r\n          },\r\n        });\r\n        window.location.reload();\r\n      } else {\r\n        history.push({\r\n          pathname: `/categorylist/${region}`,\r\n          state: { uuid },\r\n        });\r\n      }\r\n    }\r\n  };\r\n  // 파일을 여러개 추가\r\n  const onFileChange = (e) => {\r\n    const { files } = e.target;\r\n    let file;\r\n    let fileURLs = [];\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      file = files[i];\r\n      let reader = new FileReader();\r\n      reader.onload = () => {\r\n        fileURLs[i] = reader.result;\r\n        setAttachment([...fileURLs]);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onOverlayClick = (e) => {\r\n    if (e.target !== e.currentTarget) {\r\n      return;\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  //창 닫기\r\n  const closeModal = () => {\r\n    const ok = window.confirm(\r\n      \"창을 닫으면 내용이 초기화가 됩니다. 창을 닫으시겠습니까?\"\r\n    );\r\n    if (ok) {\r\n      setPost(\"\");\r\n      setTitle(\"\");\r\n      setRegion(\"\");\r\n      setAttachment([]);\r\n      isVisible();\r\n    }\r\n  };\r\n\r\n  // 올린파일 개별 삭제\r\n  const removeAttachment = (e) => {\r\n    setAttachment(attachment.filter((at) => at !== e));\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      setLogin(user);\r\n      dispatch(userMiddleware(user.uid, \"\", \"init\"));\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {postData ? (\r\n        <UpdateModal\r\n          visible={visible}\r\n          isVisible={isVisible}\r\n          postData={postData}\r\n          login={login}\r\n          isHeight={isHeight}\r\n          likePost={likePost}\r\n        />\r\n      ) : (\r\n        <>\r\n          <S.Overlay visible={visible} onClick={(e) => onOverlayClick(e)}>\r\n            <S.Container visible={visible} isHeight={isHeight}>\r\n              <S.CloseModal onClick={closeModal} className=\"fas fa-times\" />\r\n              {likePost && (\r\n                <S.Wrapper>\r\n                  {login.photoURL || likePost.user_image ? (\r\n                    <>\r\n                      <img\r\n                        src={likePost.user_image || login.photoURL}\r\n                        alt=\"프로필 이미지입니다\"\r\n                      ></img>\r\n                      <S.Name>{likePost.name || login.displayName}</S.Name>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <S.NamelessIcon className=\"fas fa-user-circle\" />\r\n                      <S.Name>{likePost.name || login.displayName}</S.Name>\r\n                    </>\r\n                  )}\r\n                </S.Wrapper>\r\n              )}\r\n              <form onSubmit={onSubmit}>\r\n                <S.TitleInput\r\n                  value={title}\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  tabIndex=\"1\"\r\n                  ref={titleRef}\r\n                  onChange={onChange}\r\n                  placeholder=\"제목을 입력해 주세요.\"\r\n                />\r\n                <textarea\r\n                  value={post}\r\n                  name=\"textarea\"\r\n                  ref={postRef}\r\n                  tabIndex=\"2\"\r\n                  onChange={onChange}\r\n                  placeholder=\"내용을 입력해주세요.\"\r\n                  rows=\"10\"\r\n                />\r\n                <select\r\n                  name=\"region\"\r\n                  value={region}\r\n                  onChange={onChange}\r\n                  tabIndex=\"3\"\r\n                >\r\n                  <option value=\"\">지역을 선택해 주세요.</option>\r\n                  <option value=\"asia\">Asia</option>\r\n                  <option value=\"europe\">Europe</option>\r\n                  <option value=\"north_america\">North America</option>\r\n                  <option value=\"south_america\">South America</option>\r\n                  <option value=\"africa\">Africa</option>\r\n                  <option value=\"oceania\">oceania</option>\r\n                  <option value=\"antarctica\">Antarctica</option>\r\n                </select>\r\n                <S.ImgUpload>\r\n                  <label for=\"inputFile\" tabIndex=\"4\">\r\n                    사진 선택\r\n                  </label>\r\n                  <p>※ ctrl로 사진을 여러장 선택하실 수 있습니다.</p>\r\n                  <input\r\n                    multiple\r\n                    id=\"inputFile\"\r\n                    accept=\"image/*\"\r\n                    type=\"file\"\r\n                    onChange={onFileChange}\r\n                    name=\"fileNames[]\"\r\n                  />\r\n                </S.ImgUpload>\r\n                <S.ImgWrapper attachment={attachment}>\r\n                  {attachment &&\r\n                    attachment.map((atta, i) => (\r\n                      <div>\r\n                        <i\r\n                          title=\"해당 사진 삭제\"\r\n                          onClick={() => removeAttachment(atta)}\r\n                          className=\"fas fa-times\"\r\n                        />\r\n                        <img key={i} src={atta} alt=\"올릴 이미지\" />\r\n                      </div>\r\n                    ))}\r\n                </S.ImgWrapper>\r\n                {load ? (\r\n                  <Loading width=\"30\" height=\"30\" />\r\n                ) : (\r\n                  <S.BtnWrapper>\r\n                    <input\r\n                      type=\"button\"\r\n                      tabIndex=\"5\"\r\n                      onClick={closeModal}\r\n                      value=\"취소\"\r\n                    />\r\n                    <input type=\"submit\" tabIndex=\"6\" value=\"등록\" />\r\n                  </S.BtnWrapper>\r\n                )}\r\n              </form>\r\n            </S.Container>\r\n          </S.Overlay>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport * as S from './Post.style';\r\nimport { throttle } from \"lodash\";\r\nimport Comment from 'components/Comment/Comment';\r\nimport PostSlider from './PostSlider/PostSlider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { likeMiddleware } from 'store/modules/postLike';\r\nimport { userMiddleware } from 'store/modules/userLike';\r\nimport { bookmarkMiddleware } from 'store/modules/bookmark';\r\nimport { mypagePostMiddleware } from 'store/modules/mypagePost';\r\n\r\nimport {\r\n  commentDelThunk,\r\n  userComDelThunk,\r\n  userLikeDelThunk,\r\n  userBookmarkDelThunk,\r\n  getComId,\r\n} from \"store/modules/delete\";\r\n\r\nimport firebase from \"firebase\";\r\nimport { dbService } from \"firebase.js\";\r\nimport WriteModal from \"components/Write/WriteModal/WriteModal\";\r\nimport timeCalculate from \"utils/timeCalculate\";\r\n\r\nconst Post = ({\r\n  postData,\r\n  setIsPostOpened,\r\n  setLikeRender,\r\n  setViewRender,\r\n  viewRender,\r\n  postView,\r\n  update,\r\n}) => {\r\n  const {\r\n    post_date,\r\n    post_region,\r\n    post_title,\r\n    post_content,\r\n    post_photo,\r\n    post_id,\r\n    post_like,\r\n    post_writer,\r\n    post_uid,\r\n    post_profile_img,\r\n    post_view,\r\n  } = postData;\r\n\r\n  const location = useLocation();\r\n\r\n  const userDB = useSelector((state) => state.userLike.data);\r\n\r\n  const auth = firebase.auth();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let [time, setTime] = useState(\"\");\r\n\r\n  let [bar, setBar] = useState(false);\r\n\r\n  let [user, setUser] = useState(\"\");\r\n\r\n  let [check, setCheck] = useState(false);\r\n\r\n  const [widthSize, setWidthSize] = useState(window.innerWidth);\r\n\r\n  // writeModal\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  // 좋아요 숫자 받아오기\r\n  let likeNum = useSelector((state) => state.postLike.likeNum);\r\n\r\n  // 내가 해당 게시글에 좋아요을 했나 안 했나 표시\r\n  let [likePost, setLikePost] = useState(location.state.like.includes(post_id));\r\n\r\n  // 내가 해당 게시글에 찜을 했나 안 했나 표시\r\n  let [bookmarkPost, setBookmarkPost] = useState(\r\n    location.state.bookmark.includes(post_id)\r\n  );\r\n\r\n  const userCheck = user.uid === post_uid;\r\n\r\n  const comment = useRef();\r\n  const textarea = useRef();\r\n\r\n  // 좋아요 아이콘 토글 -> 할 때마다 firestore에 저장 되어야 함\r\n  const onLikeToggle = async () => {\r\n    if (likePost) {\r\n      setLikePost(false);\r\n      setLikeRender(\"noneLike\");\r\n      dispatch(likeMiddleware(post_id, \"noneLike\"));\r\n      dispatch(userMiddleware(user.uid, post_id, \"noneLike\"));\r\n    } else {\r\n      setLikePost(true);\r\n      setLikeRender(\"like\");\r\n      dispatch(likeMiddleware(post_id, \"like\"));\r\n      dispatch(userMiddleware(user.uid, post_id, \"like\"));\r\n    }\r\n  };\r\n\r\n  // 찜 아이콘 토글\r\n  const onBookmarkToggle = () => {\r\n    if (bookmarkPost) {\r\n      setBookmarkPost(false);\r\n      dispatch(bookmarkMiddleware(user.uid, post_id, \"noneBookmark\"));\r\n    } else {\r\n      setBookmarkPost(true);\r\n      dispatch(bookmarkMiddleware(user.uid, post_id, \"bookmark\"));\r\n    }\r\n  };\r\n\r\n  const postEdit = () => {\r\n    setVisible(!visible);\r\n    setBar(false);\r\n  };\r\n\r\n  // 게시글 삭제 시 삭제되는 것들\r\n  // post collection : post 문서 자체\r\n  // users collection : user_write_posts, user_write_comments, user_like_posts, user_bookmark_posts\r\n  // comment collection : comment 문서 자체\r\n  const postDelete = async () => {\r\n    if(!window.confirm(\"정말 삭제하시겠습니까?\")){\r\n      onEditDelete();\r\n      return;\r\n    }\r\n    await dbService.collection(\"post\").doc(post_id).delete();\r\n    await dbService\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .update({\r\n        user_write_posts: firebase.firestore.FieldValue.arrayRemove(post_id),\r\n      });\r\n    dispatch(commentDelThunk(post_id));\r\n    dispatch(userLikeDelThunk(post_id));\r\n    dispatch(userBookmarkDelThunk(post_id));\r\n    // getComId함수를 통해 comment_id를 얻는데\r\n    // dispatch(commentDelThunk(post_id))가 실행된 후에 그 comment_id 정보가 들어옴\r\n    // dispatch를 비동기처리할 방법을 찾지 못해 setTimeout으로 처리\r\n    setTimeout(() => {\r\n      let com = getComId();\r\n      for (let i = 0; i < com[0].length; i++) {\r\n        dispatch(userComDelThunk(com[0][i]));\r\n      }\r\n    }, 1000);\r\n    onHideModal();\r\n  };\r\n\r\n  const onEditDelete = () => {\r\n    setBar(!bar);\r\n  };\r\n\r\n  const onContainerClick = (e) => {\r\n    if(e.target !== e.currentTarget){\r\n      return;\r\n    }\r\n    onHideModal();\r\n  }\r\n\r\n  // 모달창 닫기\r\n  const onHideModal = () => {\r\n    setViewRender(!viewRender);\r\n    setIsPostOpened(false);\r\n    history.push({\r\n      search: \"\",\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSize = useCallback(() => {\r\n    setWidthSize(window.innerWidth);\r\n    if(textarea.current){\r\n      textarea.current.style.height = `${textarea.current.scrollHeight}px`;\r\n    }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      dispatch(userMiddleware(user.uid, '', 'init'));\r\n      dispatch(mypagePostMiddleware(user.uid));\r\n    });\r\n    dispatch(likeMiddleware(post_id, \"init\"));\r\n    setTime(timeCalculate(post_date));\r\n    if(textarea.current){\r\n      textarea.current.style.height = `${textarea.current.scrollHeight}px`;\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", throttle(handleSize, 2000));\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleSize);\r\n    };\r\n  }, [handleSize]);\r\n\r\n  useEffect(() => {\r\n    if (location.state === undefined) {\r\n      return;\r\n    }\r\n    if (location.state.hasOwnProperty(\"check\")) {\r\n      setCheck(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <S.Container onClick={e=>onContainerClick(e)}>\r\n      <S.Contents>\r\n        <ul ref={comment}>\r\n          <S.Header>\r\n            <span>\r\n              <span>{post_title}</span>\r\n              <p>#{post_region}</p>\r\n              {update ? <p>조회수 1</p> : (check ? <p>조회수 {location.state.postData.post_view}</p> : <p>조회수 {postData.post_view+1}</p>)}\r\n            </span>\r\n            <div>\r\n              {userCheck && (\r\n                <i onClick={onEditDelete} className=\"fas fa-ellipsis-v\"></i>\r\n              )}\r\n              <i onClick={onHideModal} className=\"fas fa-times-circle\"></i>\r\n              {bar && (\r\n                <S.editDelToggle>\r\n                  <div></div>\r\n                  <p onClick={postEdit}>수정</p>\r\n                  <p onClick={postDelete}>삭제</p>\r\n                </S.editDelToggle>\r\n              )}\r\n            </div>\r\n          </S.Header>\r\n          {post_photo && <PostSlider postImages={post_photo} />}\r\n          <S.Profile>\r\n            {post_profile_img ? (\r\n              <img src={post_profile_img} alt=\"프로필 이미지입니다\"></img>\r\n            ) : (\r\n              <i className=\"fas fa-user-circle\"></i>\r\n            )}\r\n            {post_writer ? <p>{post_writer}</p> : <p>익명</p>}\r\n            <span>{time}</span>\r\n          </S.Profile>\r\n          <S.Title>{post_title}</S.Title>\r\n          <S.Content><textarea disabled height=\"auto\" ref={textarea}>{post_content}</textarea></S.Content>\r\n          <S.Like>\r\n            <span>\r\n              {likePost ? (\r\n                <i onClick={onLikeToggle} className=\"fas fa-heart\"></i>\r\n              ) : (\r\n                <i onClick={onLikeToggle} className=\"far fa-heart\"></i>\r\n              )}\r\n              {update ? <span>0</span> : (check ? <span>{location.state.postData.post_like}</span> : <span>{likeNum}</span>)}\r\n              {/* {update ? <span>0</span> : <span>{likeNum}</span>} */}\r\n              <p>명</p>이 좋아합니다\r\n            </span>\r\n            {bookmarkPost ? (\r\n              <S.Bookmark\r\n                onClick={onBookmarkToggle}\r\n                title=\"찜 해제\"\r\n                className=\"fas fa-bookmark\"\r\n              ><div>찜 목록에 추가됨</div></S.Bookmark>\r\n            ) : (\r\n              <i\r\n                onClick={onBookmarkToggle}\r\n                title=\"찜하기\"\r\n                className=\"far fa-bookmark\"\r\n              ></i>\r\n            )}\r\n          </S.Like>\r\n          <Comment postId={post_id} postregion={post_region} userDB={userDB} postLike={post_like} postView={post_view}/>\r\n        </ul>\r\n      </S.Contents>\r\n      <WriteModal visible={visible} isVisible={postEdit} postData={postData} />\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","const getDate = (timeStamp) => {\r\n  \r\n  timeStamp = Number(timeStamp)\r\n  const post_date = new Date(timeStamp);\r\n\r\n  const year = post_date.getFullYear()\r\n  const month = post_date.getMonth()\r\n  const date = post_date.getDate() < 10 ? (`0${post_date.getDate()}`) : (`${post_date.getDate()}`)\r\n  const hour = post_date.getHours() < 10 ? (`0${post_date.getHours()}`) : (`${post_date.getHours()}`);\r\n  const minute = post_date.getMinutes() < 10 ? (`0${post_date.getMinutes()}`) : (`${post_date.getMinutes()}`)\r\n\r\n  return `${year}.${month+1}.${date} ${hour}:${minute}`;\r\n}\r\n\r\nexport default getDate;","export default __webpack_public_path__ + \"static/media/blur.859f6c93.png\";","import React from 'react';\r\nimport * as S from \"./Post.style\";\r\nimport blur from \"assets/images/blur.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NoneMember = ({ setIsPostOpened }) => {\r\n\r\n  let history = useHistory();\r\n\r\n  const onLogin = () => {\r\n    history.push({\r\n      pathname: \"/login\",\r\n    });\r\n  }\r\n\r\n  const onClose = () => {\r\n    setIsPostOpened(false);\r\n    history.push({\r\n      search: '',\r\n    });\r\n  }\r\n  return (\r\n    <S.Container>\r\n      <S.Img src={blur} alt=\"비회원\"></S.Img>\r\n      <S.Alert>\r\n        <div>\r\n          <i className=\"fas fa-exclamation-circle\"></i>\r\n          <S.AlertText1>로그인 후 이용 가능한 서비스입니다.</S.AlertText1>\r\n          <S.AlertText2>로그인 하시겠습니까?</S.AlertText2>\r\n        </div>\r\n        <div>\r\n          <button onClick={onLogin}>로그인하고 전체보기</button>\r\n          <button onClick={onClose}>나가기</button>\r\n        </div>\r\n      </S.Alert>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default NoneMember;","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst MyLoader = (props) => (\r\n  <ContentLoader \r\n    speed={2}\r\n    gradientRatio ={2}\r\n    width={280}\r\n    height={380}\r\n    viewBox=\"0 0 300 380\"\r\n    backgroundColor=\"#F6F8FA\"\r\n    foregroundColor=\"#6f79a8\"\r\n    {...props}\r\n  >\r\n    <circle cx=\"40\" cy=\"35\" r=\"20\" />\r\n    <rect x=\"80\" y=\"20\" rx=\"3\" ry=\"3\" width=\"150\" height=\"30\" /> \r\n    <rect x=\"18\" y=\"70\" rx=\"3\" ry=\"3\" width=\"250\" height=\"250\" /> \r\n\r\n  </ContentLoader>\r\n)\r\n\r\nexport default MyLoader","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  min-width : 300px;\r\n  max-width : 300px;\r\n  border-radius: 1.5rem;\r\n  box-shadow : 0 0 4px #D980FA;\r\n  color : white;\r\n  margin : 0.5rem; \r\n  padding : 1.6rem 0.6rem;\r\n  z-index : 1;\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.01);\r\n  }\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  width : 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-bottom : 1rem;\r\n  position : relative;\r\n  font-size : 1rem;\r\n  img {\r\n    width : 2rem;\r\n    height : 2rem;\r\n    border-radius: 50%;\r\n  }\r\n  i {\r\n    font-size : 2rem;\r\n    background: darkgray;\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    margin-left: 1rem;\r\n  }\r\n  p {\r\n    position : absolute;\r\n    right : 0;\r\n    margin-right : 1rem;\r\n    font-size: 0.8rem;\r\n    border-radius: 10px;\r\n    /* border: 0.1px solid white; */\r\n    /* box-shadow: 0 0 5px white; */\r\n    background: #1A46A0;\r\n    padding: 0.2rem 0.5rem;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width : 100%;\r\n  position : relative;\r\n  min-height: 100px;\r\n  h2 {\r\n    font-size : 1.3rem;\r\n    margin-bottom : 0.5rem;\r\n  }\r\n  img {\r\n    width : 100%;\r\n    height : 15rem;\r\n    object-fit: cover;\r\n    border-radius: 0.3rem;\r\n    margin-bottom : 0.5rem;\r\n  }\r\n  div {\r\n    font-size : 0.8rem;\r\n    position : absolute;\r\n    bottom : -10px;\r\n  }\r\n`;\r\n\r\nconst SkeletonContainer = styled.div`\r\n  margin : 0.5rem;\r\n  padding : 1.6rem 0.6rem;\r\n  border-radius: 1.5rem;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport{\r\n  Container,\r\n  Profile,\r\n  Content,\r\n  SkeletonContainer\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport firebase from \"firebase\";\r\nimport qs from \"qs\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Post from \"components/Post/Post\";\r\nimport { userMiddleware } from \"store/modules/userLike\";\r\nimport { likeMiddleware } from \"store/modules/postLike\";\r\nimport { bookmarkMiddleware } from \"store/modules/bookmark\";\r\nimport { viewMiddleware } from \"store/modules/view\";\r\nimport { closeNav } from \"store/modules/nav\";\r\nimport { storageService } from \"firebase.js\";\r\nimport getDate from \"utils/getDate\";\r\nimport NoneMember from \"components/Post/NoneMember\";\r\nimport MyLoader from \"./ContentPlaceholder\";\r\nimport * as S from \"./PostCard.style\";\r\n\r\nconst PostCard = ({ postData, location, view }) => {\r\n  const auth = firebase.auth();\r\n  const dispatch = useDispatch();\r\n\r\n  let [userCheck, setUserCheck] = useState(false);\r\n\r\n  let [likeRender, setLikeRender] = useState(\"init\");\r\n\r\n  let [viewRender, setViewRender] = useState(false);\r\n\r\n  let [update, setUpdate] = useState(false);\r\n\r\n  // // 해당 유저가 좋아요한 post의 post_id 배열(users collection에 담김)\r\n  let likePost = useSelector((state) => state.userLike.data);\r\n  // // 해당 유저가 북마크한 post의 post_id 배열(users collection에 담김)\r\n  let bookmark = useSelector((state) => state.userLike.data);\r\n\r\n  // let view = useSelector((state)=>state.view.view);\r\n\r\n  // 개별 post\r\n  const {\r\n    post_id,\r\n    post_title,\r\n    post_region,\r\n    post_view,\r\n    post_profile_img,\r\n    post_date,\r\n    post_writer,\r\n  } = postData;\r\n\r\n  // post모달 띄우는 용도\r\n  const [isPostOpened, setIsPostOpened] = useState(false);\r\n\r\n  // representative image 지정 후 가져오기\r\n  const repImageName = useRef(`${postData.post_photo[0]}`);\r\n  const [repImage, setRepImage] = useState();\r\n\r\n  let history = useHistory();\r\n\r\n  const query = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  const qsID = query.id === post_id;\r\n\r\n  const getRepImage = async (repImageName) => {\r\n    await storageService\r\n      .refFromURL(repImageName)\r\n      .getDownloadURL()\r\n      .then((value) => {\r\n        setRepImage(value);\r\n      });\r\n  };\r\n\r\n  // profile image 가져오기\r\n  const profileImageName = useRef(`${postData.post_profile_img}`);\r\n  const [profileImage, setProfileImage] = useState();\r\n\r\n  const getProfileImage = async (profileImageName) => {\r\n    setProfileImage(profileImageName);\r\n  };\r\n\r\n  // 모달 띄우기\r\n  const onShowPostModal = (postId) => {\r\n    dispatch(closeNav());\r\n    setIsPostOpened(true);\r\n    setLikeRender(\"init\");\r\n    history.push({\r\n      search: `?id=${postId}`,\r\n      state: {\r\n        like: likePost.user_like_posts,\r\n        bookmark: bookmark.user_bookmark_posts,\r\n        postData,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onView = () => {\r\n    dispatch(viewMiddleware(post_id, \"view\"));\r\n  };\r\n\r\n  const onContainerClick = () => {\r\n    onView();\r\n    onShowPostModal(post_id);\r\n  };\r\n\r\n  // Lazy Loading\r\n  const lazyTarget = useRef();\r\n  const [isView, setIsView] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let observer;\r\n\r\n    if (lazyTarget.current) {\r\n      observer = new IntersectionObserver(\r\n        (entries) => {\r\n          entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n              // intersecting 되어 있으면\r\n              observer.unobserve(entry.target); // 1. 화면에서 나갈 때, 다시 발생안시키기 위해 2. element가 들어가야해서 .target\r\n              getRepImage(repImageName.current);\r\n              getProfileImage(profileImageName.current);\r\n              setTimeout(() => setIsView(true), 700);\r\n            }\r\n          });\r\n        },\r\n        { threshold: 0.3 }\r\n      );\r\n\r\n      observer.observe(lazyTarget.current);\r\n    }\r\n    return () => observer && observer.disconnect();\r\n  }, [lazyTarget, isView]);\r\n\r\n\r\n  // 1. 모달창 띄움 --> 2. 모달창 안에서 상태변화 --> 3. 모달창 닫음\r\n  // --> 4. 페이지를 나갔다 다시 들어오거나 새로고침하지 않고 바로 또 모달창 띄움\r\n  // useEffect의 용도 --> 4.할 때 2.에서 한 것이 바로 적용되어있게 하기\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        dispatch(userMiddleware(user.uid, post_id, \"init\"));\r\n        dispatch(bookmarkMiddleware(user.uid, post_id, \"init\"));\r\n        setUserCheck(user);\r\n      }\r\n    });\r\n    dispatch(likeMiddleware(post_id, \"init\"));\r\n  }, [isPostOpened]);\r\n\r\n  useEffect(() => {\r\n    dispatch(viewMiddleware(post_id, \"init\"));\r\n  }, [viewRender]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (location.state === undefined) {\r\n      return;\r\n    }\r\n    if (location.state.hasOwnProperty(\"uuid\")) {\r\n      setUpdate(true);\r\n      onView();\r\n      onShowPostModal(location.state.uuid);\r\n    }\r\n    if(location.state.hasOwnProperty(\"write\")) {\r\n      setUpdate(true);\r\n      onView();\r\n    }\r\n    if(location.state.hasOwnProperty(\"check\")) {\r\n      onView();\r\n    }\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n      {isView ? (\r\n        <S.Container onClick={onContainerClick} id={post_id}>\r\n          <S.Profile>\r\n          {post_profile_img ? (<img src={post_profile_img} alt=\"프로필 사진\" />) : <i className=\"fas fa-user-circle\"></i>}\r\n            <div>\r\n              {post_writer ? <h2>{post_writer}</h2> : <h2>익명</h2>}\r\n              <h5>#{post_region}</h5>\r\n            </div>\r\n            <p>조회수 {post_view}</p>\r\n          </S.Profile>\r\n          <S.Content>\r\n            <h2>{post_title}</h2>\r\n            {repImage && <img src={repImage} alt=\"여행 사진\" />}\r\n            <div>{getDate(post_date)}</div>\r\n          </S.Content>\r\n        </S.Container>\r\n      ) : (\r\n        <S.SkeletonContainer ref={lazyTarget}>\r\n          <MyLoader />\r\n        </S.SkeletonContainer>\r\n      )}\r\n      {qsID &&\r\n        (userCheck ? (\r\n          <Post\r\n            profile={post_profile_img}\r\n            postData={postData}\r\n            isPostOpened={isPostOpened}\r\n            setIsPostOpened={setIsPostOpened}\r\n            setLikeRender={setLikeRender}\r\n            setViewRender={setViewRender}\r\n            viewRender={viewRender}\r\n            postView={view}\r\n            update={update}\r\n          />\r\n        ) : (\r\n          <NoneMember setIsPostOpened={setIsPostOpened} />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin : 5vh 5vw;\r\n  margin-top: 0;\r\n  padding : 3rem;\r\n  padding-top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  ${({isPc, isTablet})=>{\r\n    if(isPc){\r\n      return css`\r\n        flex-direction : row;\r\n      `;\r\n    } else if(isTablet){\r\n      return css`\r\n        flex-direction: row;\r\n\r\n      `;\r\n    } else {\r\n      return css`\r\n        flex-direction: column;\r\n      `\r\n    }\r\n  }}\r\n  ${(props) => {\r\n    if (props.isNavOpened) {\r\n      return css`\r\n        transform: ${(props) =>\r\n          props.isNavOpened ? \"translateY(110px)\" : \"translateY(0)\"};\r\n        transition: all 300ms ease-in-out;\r\n      `;\r\n    }\r\n  }} \r\n  \r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height : 100%;\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  Column\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PostCard from \"components/PostCard/PostCard\";\r\nimport { fetchPostList } from \"store/modules/board\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport * as S from \"./Board.style\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst Board = ({ match, location }) => {\r\n  let [viewRender, setViewRender] = useState(false);\r\n\r\n  const { isNavOpened } = useSelector((state) => state.nav);\r\n\r\n  // redux에서 데이터 fetch한 결과(성공하면 data에 배열로 담김)\r\n  const { postList, error, loading, view } = useSelector((state) => ({\r\n    postList: state.board.data,\r\n    loading: state.board.loading,\r\n    error: state.board.error,\r\n    view: state.view.view,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const isPc = useMediaQuery({\r\n    query: \"(min-width : 1024px)\",\r\n  });\r\n  const isTablet = useMediaQuery({\r\n    query: \"(min-width : 680px) and (max-width :1023px)\",\r\n  });\r\n\r\n  // categorylist에서 region에 따라서 놓여져있고 클릭하면 그에 맞게 검색\r\n  useEffect(() => {\r\n    dispatch(fetchPostList(match.params.region));\r\n  }, [dispatch, match.params.region]);\r\n\r\n  useEffect(() => {}, [isNavOpened]);\r\n\r\n  if (loading) return <Loading width=\"100\" height=\"100\" />;\r\n  if (error) return <div>Error</div>;\r\n  if (!postList) return null;\r\n\r\n  // postList를 등분\r\n  if (postList) {\r\n    let check;\r\n    if (isTablet) {\r\n      check = Math.ceil(postList.length / 2);\r\n      return (\r\n        <S.Container isPc={isPc} isTablet={isTablet}>\r\n          <S.Column>\r\n            {postList\r\n              .filter((ele, index) => {\r\n                return index < check;\r\n              })\r\n              .map((post) => {\r\n                return (\r\n                  <PostCard\r\n                    key={post.post_id}\r\n                    postData={post}\r\n                    location={location}\r\n                    view={view}\r\n                    viewRender={viewRender}\r\n                    setViewRender={setViewRender}\r\n                  />\r\n                );\r\n              })}\r\n          </S.Column>\r\n          <S.Column>\r\n            {postList\r\n              .filter((ele, index) => {\r\n                return index >= check;\r\n              })\r\n              .map((post) => {\r\n                return (\r\n                  <PostCard\r\n                    key={post.post_id}\r\n                    postData={post}\r\n                    location={location}\r\n                    view={view}\r\n                    viewRender={viewRender}\r\n                    setViewRender={setViewRender}\r\n                  />\r\n                );\r\n              })}\r\n          </S.Column>\r\n        </S.Container>\r\n      );\r\n    } else {\r\n      // PC. 세등분\r\n      check = Math.ceil(postList.length / 3);\r\n\r\n      return (\r\n        <S.Container isPc={isPc} isTablet={isTablet}>\r\n          <S.Column>\r\n            {postList\r\n              .filter((ele, index) => {\r\n                return index < check;\r\n              })\r\n              .map((post) => {\r\n                return (\r\n                  <PostCard\r\n                    key={post.post_id}\r\n                    postData={post}\r\n                    location={location}\r\n                    view={view}\r\n                    viewRender={viewRender}\r\n                    setViewRender={setViewRender}\r\n                  />\r\n                );\r\n              })}\r\n          </S.Column>\r\n          <S.Column>\r\n            {postList\r\n              .filter((ele, index) => {\r\n                return index >= check && index < check * 2;\r\n              })\r\n              .map((post, i) => {\r\n                return (\r\n                  <PostCard\r\n                    key={post.post_id}\r\n                    postData={post}\r\n                    location={location}\r\n                    view={view}\r\n                    viewRender={viewRender}\r\n                    setViewRender={setViewRender}\r\n                  />\r\n                );\r\n              })}\r\n          </S.Column>\r\n          <S.Column>\r\n            {postList\r\n              .filter((ele, index) => {\r\n                return index >= check * 2;\r\n              })\r\n              .map((post, i) => {\r\n                return (\r\n                  <PostCard\r\n                    key={post.post_id}\r\n                    postData={post}\r\n                    location={location}\r\n                    view={view}\r\n                    viewRender={viewRender}\r\n                    setViewRender={setViewRender}\r\n                  />\r\n                );\r\n              })}\r\n          </S.Column>\r\n        </S.Container>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Board;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 50%;\r\n  margin-top: calc(-286px / 2);\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  font-weight: 700;\r\n  font-size: 250px;\r\n  color: white;\r\n  text-align: center;\r\n  caret-color: transparent;\r\n  @media screen and (max-width: 900px) {\r\n    font-size: 150px;\r\n  }\r\n  @media screen and (max-width: 550px) {\r\n    font-size: 100px;\r\n  }\r\n`;\r\n\r\nconst P = styled.p`\r\n  font-size: 36px;\r\n  font-weight: 700;\r\n  color: white;\r\n  text-align: center;\r\n  caret-color: transparent;\r\n  margin-top: 4rem;\r\n  @media screen and (max-width: 900px) {\r\n    margin-top: 3rem;\r\n    font-size: 20px;\r\n  }\r\n  @media screen and (max-width: 550px) {\r\n    margin-top: 2rem;\r\n  }\r\n`;\r\n\r\nexport { Container, H2, P };\r\n","import React from \"react\";\r\nimport * as S from \"./GreetingCard.style\";\r\nfunction GreetingCard() {\r\n  return (\r\n    <S.Container>\r\n      <S.H2>Amigo!</S.H2>\r\n      <S.P>TRAVEL IS FUN!</S.P>\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nexport default GreetingCard;\r\n","import GreetingCard from \"components/GreetingCard/GreetingCard\";\r\n\r\nexport default function Home() {\r\n  return <GreetingCard />;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Logincontainer = styled.div`\r\n  height: 621px;\r\n  margin: auto;\r\n`;\r\n\r\nconst LoginBg = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport { Logincontainer, LoginBg };\r\n","import styled from 'styled-components';\r\n\r\nconst white = \"#fff\";\r\nconst pink = \"#ff73b3\";\r\n\r\n\r\nconst Header = styled.header`\r\n  height: 100%;\r\n  .table {\r\n    display: table;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .table-cell {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n    transition: all 0.5s;\r\n    text-align: center;\r\n  }\r\n\r\n  .container {\r\n    position: relative;\r\n    width: 600px;\r\n    margin: 30px auto 0;\r\n    height: 320px;\r\n    background-color: #999ede;\r\n    top: 50%;\r\n    margin-top: -160px;\r\n    transition: all 0.5s;\r\n  }\r\n  .container .box {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n  }\r\n  .container .box:before,\r\n  .container .box:after {\r\n    content: ' ';\r\n    position: absolute;\r\n    left: 152px;\r\n    top: 50px;\r\n    background-color: #9297e0;\r\n    transform: rotateX(52deg) rotateY(15deg) rotateZ(-38deg);\r\n    width: 300px;\r\n    height: 285px;\r\n    transition: all 0.5s;\r\n  }\r\n  .container .box:after {\r\n    background-color: #a5aae4;\r\n    top: -10px;\r\n    left: 80px;\r\n    width: 320px;\r\n    height: 180px;\r\n  }\r\n  .container .container-forms {\r\n    position: relative;\r\n  }\r\n  .container .btn {\r\n    cursor: pointer;\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    width: 60px;\r\n    color: ${white};\r\n    background-color: ${pink};\r\n    opacity: 1;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  .container .btn:hover {\r\n    opacity: 0.7;\r\n  }\r\n  .container .btn,\r\n  .container input {\r\n    padding: 10px 15px;\r\n  }\r\n  .container input {\r\n    margin: 0 auto 15px;\r\n    display: block;\r\n    width: 220px;\r\n    transition: all 0.3s;\r\n  }\r\n  .container .container-forms .container-info {\r\n    text-align: left;\r\n    font-size: 0;\r\n  }\r\n  .container .container-forms .container-info .info-item {\r\n    text-align: center;\r\n    font-size: 16px;\r\n    width: 300px;\r\n    height: 320px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    color: ${white};\r\n    opacity: 1;\r\n    transition: all 0.3s;\r\n  }\r\n  .container .container-forms .container-info .info-item p {\r\n    font-size: 20px;\r\n    margin: 20px;\r\n  }\r\n  .container .container-forms .container-info .info-item .btn {\r\n    background-color: transparent;\r\n    border: 1px solid ${white};\r\n    padding: 12px 6px;\r\n  }\r\n  .container .container-forms .container-info .info-item .table-cell {\r\n    padding-right: 35px;\r\n  }\r\n  .container\r\n    .container-forms\r\n    .container-info\r\n    .info-item:nth-child(2)\r\n    .table-cell {\r\n    padding-left: 35px;\r\n    padding-right: 0;\r\n  }\r\n  .container .container-form {\r\n    overflow: hidden;\r\n    position: absolute;\r\n    left: 30px;\r\n    top: -30px;\r\n    width: 305px;\r\n    height: 380px;\r\n    background-color: ${white};\r\n    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.2);\r\n    transition: all 0.5s;\r\n  }\r\n  .container .container-form:before {\r\n    content: '✔';\r\n    position: absolute;\r\n    left: 160px;\r\n    top: -50px;\r\n    color: #5356ad;\r\n    font-size: 130px;\r\n    opacity: 0;\r\n    transition: all 0.5s;\r\n  }\r\n  .container .container-form .btn {\r\n    position: relative;\r\n    box-shadow: 0 0 10px 1px ${pink};\r\n    margin-top: 13px;\r\n    width: 70%;\r\n    border-radius: 12px;\r\n  }\r\n  .container .container-form .findPassword {\r\n    position: relative;\r\n    cursor: pointer;\r\n    text-align: end;\r\n    background-color: transparent;\r\n    font-size: 10px;\r\n    width: 70%;\r\n    border: none;\r\n  }\r\n  .container .form-item {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 1;\r\n    transition: all 0.5s;\r\n  }\r\n  .container .form-item.sign-up {\r\n    position: absolute;\r\n    left: -100%;\r\n    opacity: 0;\r\n  }\r\n  .container.log-in .box:before {\r\n    position: absolute;\r\n    left: 180px;\r\n    top: 62px;\r\n    height: 265px;\r\n  }\r\n  .container.log-in .box:after {\r\n    top: 22px;\r\n    left: 192px;\r\n    width: 324px;\r\n    height: 220px;\r\n  }\r\n  .container.log-in .container-form {\r\n    left: 265px;\r\n  }\r\n  .container.log-in .container-form .form-item.sign-up {\r\n    left: 0;\r\n    opacity: 1;\r\n  }\r\n  .container.log-in .container-form .form-item.log-in {\r\n    left: -100%;\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport { Header };\r\n","import styled from 'styled-components';\r\n\r\nconst Footer = styled.footer`\r\n  height: 100%;\r\n  ul {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    transform: translateY(300px);\r\n\r\n    li {\r\n      button {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: none;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        span {\r\n          font-size: 32px;\r\n        }\r\n        p {\r\n          display: inline-block;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .closeBtn {\r\n    position: absolute;\r\n    border: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    font-size: 24px;\r\n    top: 1em;\r\n    left: 1em;\r\n  }\r\n`;\r\n\r\nexport { Footer };\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as S from './LoginFooter.style';\r\n\r\nfunction LoginFooter({ authService }) {\r\n  const history = useHistory();\r\n  // 로그아웃 페이지 전환\r\n  const goToLogin = (userId) => {\r\n    history.push({\r\n      pathname: '/',\r\n      state: { id: userId },\r\n    });\r\n  };\r\n\r\n  // 로그인 페이지로 전환\r\n  const routeChange = () => {\r\n    let path = '/';\r\n    history.push(path);\r\n  };\r\n\r\n  const onLogin = (event) => {\r\n    authService //\r\n      .login(event.currentTarget.textContent)\r\n      .then((data) => {\r\n        goToLogin(data.user.uid);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authService.onAuthChange((user) => {\r\n      user && goToLogin(user.uid);\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <S.Footer>\r\n        <ul>\r\n          {/* Google login button */}\r\n          <li>\r\n            <button onClick={onLogin}>\r\n              <span>\r\n                <i className=\"fab fa-google\"></i>\r\n              </span>\r\n              <p>Google</p>\r\n            </button>\r\n          </li>\r\n          {/* Github login button*/}\r\n          <li>\r\n            <button onClick={onLogin}>\r\n              <span>\r\n                <i className=\"fab fa-github\"></i>\r\n              </span>\r\n              <p>Github</p>\r\n            </button>\r\n          </li>\r\n          {/* Twitter login button */}\r\n          <li>\r\n            <button onClick={onLogin}>\r\n              <span>\r\n                <i className=\"fab fa-twitter\"></i>\r\n              </span>\r\n              <p>Twitter</p>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        {/* Home return button */}\r\n        <button className=\"closeBtn\" onClick={routeChange}>\r\n          <i className=\"fas fa-arrow-left\"></i>\r\n        </button>\r\n      </S.Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginFooter;\r\n","import * as S from './LoginHeader.style';\r\nimport NavLinks from 'components/NavLinks/NavLinks';\r\nimport LoginFooter from 'components/LoginModal/footer/LoginFooter';\r\nimport AuthService from 'auth_service';\r\n\r\nfunction LoginHeader(props) {\r\n  const authService = new AuthService();\r\n  const {\r\n    user,\r\n    email,\r\n    setEmail,\r\n    password,\r\n    setPassword,\r\n    handleLogin,\r\n    handleSignUP,\r\n    hasAccount,\r\n    emailError,\r\n    passwordError,\r\n    handleLogout,\r\n    toggleClass,\r\n    goToPassword,\r\n    getUserProfile,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <NavLinks handleLogout={handleLogout} />\r\n      ) : (\r\n        <S.Header>\r\n          <main className={hasAccount ? 'container log-in' : 'container'}>\r\n            <article className=\"box\"></article>\r\n            <article className=\"container-forms\">\r\n              <section className=\"container-info\">\r\n                <div className=\"info-item\">\r\n                  <div className=\"table\">\r\n                    <div className=\"table-cell\">\r\n                      <p>Have an account?</p>\r\n                      <button onClick={toggleClass} className=\"btn\">\r\n                        Log in\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <div className=\"table\">\r\n                    <div className=\"table-cell\">\r\n                      <p>Don't have an account?</p>\r\n                      <button onClick={toggleClass} className=\"btn\">\r\n                        Sign up\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n\r\n              <section className=\"container-form\">\r\n                <div className=\"form-item log-in\">\r\n                  <div className=\"table\">\r\n                    <div className=\"table-cell\">\r\n                      <input\r\n                        className=\"inputEmail\"\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        required\r\n                        value={email}\r\n                        placeholder=\"Email Address\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                      <p className=\"errorMsg\">{emailError}</p>\r\n\r\n                      <input\r\n                        className=\"inputPw\"\r\n                        type=\"password\"\r\n                        required\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <p className=\"errorMsg\">{passwordError}</p>\r\n                      <button onClick={handleLogin} className=\"btn\">\r\n                        Log in\r\n                      </button>\r\n                      <button className=\"findPassword\" onClick={goToPassword}>\r\n                        비밀번호 재설정\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-item sign-up\">\r\n                  <div className=\"table\">\r\n                    <div className=\"table-cell\">\r\n                      <input\r\n                        className=\"inputEmail\"\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        required\r\n                        value={email}\r\n                        placeholder=\"Email Address\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      />\r\n                      <p className=\"errorMsg\">{emailError}</p>\r\n                      <input\r\n                        className=\"inputPw\"\r\n                        type=\"password\"\r\n                        required\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <p className=\"errorMsg\">{passwordError}</p>\r\n                      <button onClick={handleSignUP} className=\"btn\">\r\n                        Sign up\r\n                      </button>\r\n                      <button className=\"findPassword\" onClick={goToPassword}>\r\n                        비밀번호 재설정\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <LoginFooter authService={authService} />\r\n              </section>\r\n            </article>\r\n          </main>\r\n        </S.Header>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as S from './LoginModalOpen.style';\r\nimport LoginHeader from 'components/LoginModal/header/LoginHeader';\r\nimport AuthService from 'auth_service';\r\nimport firebaseService from 'firebase';\r\nimport NavLinks from 'components/NavLinks/NavLinks';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginModalOpen() {\r\n  const authService = new AuthService();\r\n  const [user, setUser] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const goToPassword = () => {\r\n    let path = '/LoginHelp';\r\n    history.push(path);\r\n  };\r\n\r\n  const toggleClass = () => {\r\n    setHasAccount(!hasAccount);\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError('');\r\n    setPasswordError('');\r\n  };\r\n\r\n  // 로그인\r\n  const handleLogin = async () => {\r\n    clearErrors();\r\n    firebaseService\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/invalid-email':\r\n          case 'auth/user-disabled':\r\n          case 'auth/user-not-found':\r\n            setEmailError(err.message);\r\n            break;\r\n          case 'auth/wrong-password':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  // 회원가입\r\n  const handleSignUP = async () => {\r\n    clearErrors();\r\n    firebaseService\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/email-already-in-use':\r\n          case 'auth/invalid-email':\r\n            setEmailError(err.message);\r\n            break;\r\n          case 'auth/weak-password':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  // 로그아웃\r\n  const handleLogout = () => {\r\n    firebaseService.auth().signOut();\r\n  };\r\n\r\n  // 현재 로그인한 사용자 가져오기\r\n  const authListener = () => {\r\n    firebaseService.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        setUser(user);\r\n      } else {\r\n        setUser('');\r\n      }\r\n    });\r\n  };\r\n\r\n  function getUserProfile() {\r\n    const user = firebaseService.auth().currentUser;\r\n    if (user !== null) {\r\n      const displayName = user.displayName;\r\n      const email = user.email;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <NavLinks user={user} setUser={setUser} handleLogout={handleLogout} />\r\n      ) : (\r\n        <>\r\n          <S.LoginBg />\r\n          <S.Logincontainer>\r\n            <LoginHeader\r\n              authService={authService}\r\n              user={user}\r\n              setUser={setUser}\r\n              email={email}\r\n              setEmail={setEmail}\r\n              password={password}\r\n              setPassword={setPassword}\r\n              handleLogin={handleLogin}\r\n              handleSignUP={handleSignUP}\r\n              hasAccount={hasAccount}\r\n              setHasAccount={setHasAccount}\r\n              emailError={emailError}\r\n              passwordError={passwordError}\r\n              toggleClass={toggleClass}\r\n              goToPassword={goToPassword}\r\n              getUserProfile={getUserProfile}\r\n            />\r\n          </S.Logincontainer>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginModalOpen;\r\n","import React from 'react';\r\nimport LoginModalOpen from 'components/LoginModal/LoginModalOpen';\r\n\r\nexport default function Login() {\r\n  return <LoginModalOpen />;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst blue = \"#409BF0\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  height: 70vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  caret-color: transparent;\r\n  section {\r\n    width: 40rem;\r\n    height: 20rem;\r\n    background: rgb(0,0,0,0.5);\r\n    box-shadow: 0 0 4px ${blue};\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    h1 {\r\n      font-size: 8rem;\r\n      padding: 2rem 1rem;\r\n      border-right: 1px solid darkgray;\r\n    }\r\n    div {\r\n      padding: 1rem;\r\n      transform: translateY(0.5rem);\r\n      h2 {\r\n        font-size: 2rem;\r\n      }\r\n      p {\r\n        margin: 0.8rem 0;\r\n      }\r\n      button {\r\n        font-size: 1rem;\r\n        border: none;\r\n        padding: 0.5rem 1rem;\r\n        border-radius: 10px;\r\n        color: white;\r\n        font-weight: bold;\r\n        border: 1px solid ${blue};\r\n        background-color: ${blue};\r\n        transition: all 200ms ease-in-out;\r\n      }\r\n      button:hover {\r\n        cursor: pointer;\r\n        background: transparent;\r\n        color: ${blue};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  Container\r\n}","import React from \"react\";\r\nimport { useHistory } from 'react-router';\r\nimport * as S from \"./NotFound.style\";\r\n\r\nexport default function NotFound() {\r\n\r\n  const history = useHistory();\r\n\r\n  const goBack = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <S.Container>\r\n      <section>\r\n        <h1>404</h1>\r\n        <div>\r\n          <h2>SORRY!</h2>\r\n          <p>페이지를 찾을 수 없습니다</p>\r\n          <button onClick={goBack}>Go Back</button>\r\n        </div>\r\n      </section>\r\n    </S.Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst darkBlue = \"#1a46a0\";\r\n\r\nconst Button = styled.div`\r\n  position: fixed;\r\n  bottom: 2rem;\r\n  right: 2rem;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n  width: 4rem;\r\n  height: 4rem;\r\n  transition: 0.3s;\r\n  background-color: ${darkBlue};\r\n  z-index: 10;\r\n  ::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-left: calc(-3rem / 2);\r\n    margin-top: calc(-0.5rem / 2);\r\n    width: 3rem;\r\n    height: 0.5rem;\r\n    background-color: black;\r\n    border-radius: 1rem;\r\n    transition: 0.3s;\r\n  }\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-top: calc(-3rem / 2);\r\n    margin-left: calc(-0.5rem / 2);\r\n    width: 0.5rem;\r\n    height: 3rem;\r\n    background-color: black;\r\n    border-radius: 1rem;\r\n    transition: 0.3s;\r\n  }\r\n  :hover {\r\n    background-color: transparent;\r\n    border: 0.2rem solid ${darkBlue};\r\n    ::after {\r\n      background-color: ${darkBlue};\r\n    }\r\n    ::before {\r\n      background-color: ${darkBlue};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  position: absolute;\r\n  top: -3rem;\r\n  right: -1.2rem;\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 6rem;\r\n  height: 2rem;\r\n  color: white;\r\n  background: rgb(255,255,255,0.2);\r\n  border-radius: 10px;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport { Title, Button };\r\n","import { useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as S from \"./WriteBtn.style\";\r\n\r\n\r\nexport default function WriteBtn({ visible, isVisible }) {\r\n  const history = useHistory();\r\n  const title = useRef();\r\n  const movePage = () => {\r\n    history.push({\r\n      pathname: \"/WriteModal\",\r\n    })\r\n  };\r\n\r\n  const onTitleIn = () => {\r\n    title.current.style.display = 'flex';\r\n  };\r\n\r\n  const onTitleOut = () => {\r\n    title.current.style.display = 'none';\r\n  };\r\n\r\n  return (\r\n    <S.Button onClick={isVisible} onMouseOver={onTitleIn} onMouseOut={onTitleOut}>\r\n      <S.Title ref={title}>\r\n        <p>게시글 쓰기</p>\r\n      </S.Title>\r\n    </S.Button>\r\n  );\r\n}\r\n\r\n\r\n","import { css } from \"styled-components\";\r\n\r\nexport const flex = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const frame = css`\r\n  background-color: rgb(255,255,255,0.1);\r\n  color: white;\r\n  width: 15rem;\r\n  padding: 1rem;\r\n  border-radius: 10px;\r\n  margin-bottom: 1rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const marginTop = css`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nexport const fontSize = css`\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport const hideScrollbar = css`\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const cursorPointer = css`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;","import styled, { keyframes, css } from 'styled-components';\r\nimport { flex, hideScrollbar } from './styleConstatns';\r\n\r\nconst purple = '#D980FA';\r\n\r\nconst Container = styled.section`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  ${flex};\r\n  flex-direction: row;\r\n  caret-color: transparent;\r\n  @media screen and (min-width: 1024px) {\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst leftclose = keyframes`\r\n  from {\r\n    transform: translateX(0rem);\r\n  }\r\n  to {\r\n    transform: translateX(-10.5rem);\r\n  }\r\n`;\r\n\r\nconst leftshow = keyframes`\r\n  from {\r\n    transform: translateX(-10.5rem);\r\n  }\r\n  to {\r\n    transform: translateX(0rem);\r\n  }\r\n`;\r\n\r\nconst show = keyframes`\r\n  from {\r\n    display: none;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    display: flex;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  width: 20rem;\r\n  height: 30rem;\r\n  border-radius: 20px;\r\n  position: absolute;\r\n  ${flex};\r\n  justify-content: flex-start;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 4px ${purple};\r\n  background-color: rgb(0, 0, 0, 0.5);\r\n  margin-bottom: 5rem;\r\n  ${({ check }) => {\r\n    if (check) {\r\n      return css`\r\n        @media screen and (max-width: 740px) {\r\n          animation: ${show} 800ms;\r\n          display: none;\r\n          animation-iteration-count: 1;\r\n          animation-direction: normal;\r\n        }\r\n        transform: translateX(-10.5rem);\r\n        animation: ${leftclose} 800ms;\r\n        animation-iteration-count: 1;\r\n        animation-direction: normal;\r\n      `;\r\n    }\r\n    if (!check) {\r\n      return css`\r\n        @media screen and (max-width: 740px) {\r\n          animation: ${show} 800ms;\r\n          animation-iteration-count: 1;\r\n          animation-direction: normal;\r\n        }\r\n        animation: ${leftshow} 800ms;\r\n        animation-iteration-count: 1;\r\n        animation-direction: normal;\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\nconst BackImage = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n  ${flex};\r\n  flex-direction: row;\r\n  background-color: rgb(0, 0, 0, 0.3);\r\n  img {\r\n    width: 4rem;\r\n    height: 4rem;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n  }\r\n  div {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  p {\r\n    position: absolute;\r\n    background-color: rgb(255, 255, 255, 0.1);\r\n    color: white;\r\n    width: 15rem;\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    transform: translateY(1.5rem);\r\n  }\r\n  span {\r\n    color: white;\r\n    font-size: 1.2rem;\r\n  }\r\n  i {\r\n    font-size: 4rem;\r\n    color: white;\r\n    background: darkgray;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  word-break: break-all;\r\n  line-height: 1.5;\r\n  margin-left: 1rem;\r\n  max-width: 12rem;\r\n  ${flex};\r\n  ${(props) => {\r\n    if (props.name.length >= 3) {\r\n      return css`\r\n        flex-direction: column;\r\n      `;\r\n    } else {\r\n      return css`\r\n        flex-direction: row;\r\n      `;\r\n    }\r\n  }}\r\n  span:first-child {\r\n    margin-right: 0.5rem;\r\n    text-align: center;\r\n  }\r\n  span:last-child {\r\n    font-size: 1.1rem;\r\n  }\r\n  b:first-child {\r\n    color: #409bf0;\r\n  }\r\n  b:last-child {\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst ListArea = styled.div`\r\n  width: 100%;\r\n  height: 25rem;\r\n  ${flex};\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n  p {\r\n    background-color: rgb(255, 255, 255, 0.1);\r\n    color: white;\r\n    width: 15rem;\r\n    padding: 1rem;\r\n    border-radius: 10px;\r\n    margin-bottom: 1rem;\r\n    cursor: pointer;\r\n    i {\r\n      width: 1rem;\r\n      margin-right: 0.7rem;\r\n      color: rgb(255, 255, 255, 0.7);\r\n    }\r\n  }\r\n  ul {\r\n    width: 15rem;\r\n    border-radius: 10px;\r\n    background-color: rgb(255, 255, 255, 0.1);\r\n    margin-bottom: 2rem;\r\n  }\r\n  li {\r\n    width: 13rem;\r\n    padding: 1rem 0;\r\n    margin: 0 1rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    i {\r\n      width: 1rem;\r\n      margin-right: 0.7rem;\r\n      text-align: center;\r\n      color: rgb(255, 255, 255, 0.7);\r\n    }\r\n  }\r\n  li:nth-child(2n) {\r\n    border-top: 1px rgb(255, 255, 255, 0.2) solid;\r\n    border-bottom: 1px rgb(255, 255, 255, 0.2) solid;\r\n  }\r\n`;\r\n\r\nconst rightclose = keyframes`\r\n  from {\r\n    transform: translateX(0rem);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateX(10.5rem);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst rightshow1 = keyframes`\r\n  from {\r\n    transform: translateX(10.5rem);\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    transform: translateX(0rem);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  position: absolute;\r\n  width: 20rem;\r\n  height: 30rem;\r\n  margin-bottom: 5rem;\r\n  border-radius: 20px;\r\n  ${flex};\r\n  color: white;\r\n  overflow: hidden;\r\n  box-shadow: 0 0 4px ${purple};\r\n  background-color: rgb(0, 0, 0, 0.5);\r\n  animation: ${rightclose} 800ms;\r\n  animation-iteration-count: 1;\r\n  animation-direction: normal;\r\n  ${({ check }) => {\r\n    if (check) {\r\n      return css`\r\n        @media screen and (max-width: 740px) {\r\n          animation: ${show} 800ms;\r\n          transform: translateX(0rem);\r\n          animation-iteration-count: 1;\r\n          animation-direction: normal;\r\n        }\r\n        transform: translateX(10.5rem);\r\n        animation: ${rightclose} 800ms;\r\n        animation-iteration-count: 1;\r\n        animation-direction: normal;\r\n      `;\r\n    }\r\n    if (!check) {\r\n      return css`\r\n        @media screen and (max-width: 740px) {\r\n          display: none;\r\n          animation: ${show} 800ms;\r\n          animation-iteration-count: 1;\r\n          animation-direction: normal;\r\n        }\r\n        animation: ${rightshow1} 800ms;\r\n        animation-iteration-count: 1;\r\n        animation-direction: normal;\r\n      `;\r\n    }\r\n  }}\r\n  ul {\r\n    height: 26rem;\r\n    overflow-y: scroll;\r\n    ${hideScrollbar};\r\n    li:nth-child(1) {\r\n      text-align: center;\r\n      margin-bottom: 2rem;\r\n      font-size: 1.2rem;\r\n      i {\r\n        position: absolute;\r\n        font-size: 1.5rem;\r\n        top: 2rem;\r\n        left: 2.5rem;\r\n      }\r\n      i:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  text-align: center;\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 40px 0;\r\n    li {\r\n      width: 100%;\r\n      h1 {\r\n        font-size: 34px;\r\n        transform: translateY(-100%);\r\n      }\r\n      button {\r\n        border: none;\r\n        width: 100%;\r\n        height: 3rem;\r\n        border-radius: 12px;\r\n        color: #fff;\r\n        background-color: #ff73b3;\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n        margin-top: 1rem;\r\n        box-shadow: 0 0 10px 1px #ff73b3;\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Logincontainer = styled.div`\r\n  position: absolute;\r\n  width: 480px;\r\n  height: 400px;\r\n  background-color: #fffaf0;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  z-index: 100;\r\n  padding: 60px 68px 40px 68px;\r\n  @media screen and (max-width: 740px) {\r\n    width: 100vw;\r\n    margin: 0;\r\n    height: 100vh;\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nexport {\r\n  Container,\r\n  Contents,\r\n  Content,\r\n  BackImage,\r\n  ListArea,\r\n  Title,\r\n  Header,\r\n  Logincontainer,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\nimport { flex, frame } from \"../styleConstatns\";\r\n\r\nconst darkBlue = \"#1A46A0\";\r\n\r\nconst Id = styled.li`\r\n  ${frame};\r\n  cursor: auto;\r\n`;\r\n\r\nconst NickName = styled.li`\r\n  ${frame};\r\n  cursor: auto;\r\n  div{\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-content: flex-start;\r\n    textarea {\r\n      caret-color: black;\r\n      border: none;\r\n      outline: none;\r\n      resize: none;\r\n      width: 80%;\r\n      height: 1.5rem;\r\n      font-size: 0.9rem;\r\n      display: table-cell;\r\n      vertical-align: middle;\r\n      padding: 0.35rem;\r\n      overflow: hidden;\r\n    }\r\n    textarea::placeholder{\r\n      color: darkgray;\r\n      font-weight: bold;\r\n      font-size: 0.7rem;\r\n    }\r\n    button {\r\n      height: 1.5rem;\r\n      font-size: 0.8rem;\r\n      background: ${darkBlue};\r\n      padding: 0.2rem 0.5rem;\r\n      border: none;\r\n      color: white;\r\n    }\r\n    button:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Profile = styled.li`\r\n  ${frame};\r\n  cursor: auto;\r\n`;\r\n\r\nconst ProfileImg = styled.img`\r\n  width: 5rem;\r\n  height: 5rem;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ProfileIcon = styled.i`\r\n  font-size: 5rem;\r\n  margin: 0.5rem 1rem 0 0;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n  background: darkgray;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  border-radius: 10px;\r\n  color: #245ed4;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  color: darkgray; \r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Paragraph = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  margin-bottom: 0.5rem;\r\n  :last-child{\r\n    position: relative;\r\n  }\r\n  i {\r\n    margin-left: 0.5rem;\r\n  }\r\n  img {\r\n    margin: 0.5rem;\r\n    margin-left: 0;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  padding-bottom: 2rem;\r\n  ${(props) => {\r\n    if (props.img) {\r\n      return css`\r\n        padding-bottom: 2rem;\r\n      `;\r\n    } else {\r\n      return css`\r\n        padding-bottom: 0;\r\n      `;\r\n    }\r\n  }}\r\n  div:nth-child(1){\r\n    margin: 0.5rem 0;\r\n    label {\r\n      font-size: 0.8rem;\r\n      background: ${darkBlue};\r\n      padding: 0.2rem 0.5rem;\r\n      border-radius: 10px;\r\n    }\r\n    label:hover {\r\n      cursor: pointer;\r\n    }\r\n    input {\r\n      display: none;\r\n    }\r\n    p {\r\n      position: absolute;\r\n      bottom: 0;\r\n      left: 0;\r\n      font-size: 0.8rem;\r\n      background: ${darkBlue};\r\n      padding: 0.35rem 0.5rem;\r\n      border-radius: 10px;\r\n      text-align: center;\r\n    }\r\n    p:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  div:nth-child(2){\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    button {\r\n      height: 1.5rem;\r\n      font-size: 0.8rem;\r\n      padding: 0.2rem 0.5rem;\r\n      border-radius: 10px;\r\n      border: none;\r\n      background: #a14892;\r\n      color: white;\r\n      transform: translate(-0.5rem, -3.9rem);\r\n    }\r\n    button:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst Loading = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n  background: rgb(0,0,0,0.7);\r\n  ${flex};\r\n`;\r\n\r\nexport {\r\n  Id,\r\n  Paragraph,\r\n  NickName,\r\n  Profile,\r\n  ProfileImg,\r\n  ProfileIcon,\r\n  Title,\r\n  Icon,\r\n  Loading,\r\n  Form,\r\n};","import React, { useState, useRef } from 'react';\r\nimport * as S from \"./Info.style\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { userMiddleware } from 'store/modules/userLike';\r\nimport { editMypageThunk } from 'store/modules/mypageComment';\r\nimport { editUserImgThunk, editUserNameThunk } from 'store/modules/mypagePost';\r\nimport { dbService, storageService } from 'firebase.js';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Loading from \"../../Loading/Loading\";\r\n\r\nconst Info = ({ uid, user, userDB, change, setChange }) => {\r\n\r\n\r\n  const input = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [attachment, setAttachment] = useState([]);\r\n\r\n  let [load, setLoad] = useState(false);\r\n\r\n  let [nickName, setNickName] = useState(false);\r\n\r\n  let [img, setImg] = useState(false);\r\n\r\n\r\n\r\n  const onUsername = (value) => {\r\n    dbService.collection('users').doc(user.uid).update({\r\n      name: value,      \r\n    });\r\n    dispatch(userMiddleware(user.uid, '', 'init'));\r\n    dispatch(editMypageThunk(user.uid, value, 'name'));\r\n    dispatch(editUserNameThunk(user.uid, value));\r\n    setNickName(false);\r\n    setChange(!change);\r\n    setTimeout(()=>{\r\n      dispatch(editMypageThunk(user.uid, '', 'finish'));\r\n    }, 1000);\r\n  };\r\n\r\n\r\n  const onFileChange = (e) => {\r\n    const { files } = e.target;\r\n    let file;\r\n    let fileURLs = [];\r\n\r\n    file = files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = () => {\r\n      fileURLs[0] = reader.result;\r\n      setAttachment([...fileURLs]);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onEnter = (e) => {\r\n    if(e.key != 'Enter'){\r\n      return;\r\n    }\r\n    if(e.key === 'Enter'){\r\n      e.preventDefault();\r\n      onSubmitBtn();\r\n    }\r\n  };\r\n\r\n  const onSubmitBtn = () => {\r\n    onUsername(input.current.value);\r\n    input.current.value = '';\r\n  };\r\n\r\n  const onSubmit = async(e) => {\r\n    e.preventDefault();\r\n    setLoad(true);\r\n    let attachmentUrl = [];\r\n    if (attachment) {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${uid.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(\r\n        attachment[0],\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl.push(await response.ref.getDownloadURL());\r\n    };\r\n\r\n    await dbService.collection('users').doc(user.uid).update({\r\n      user_image: attachmentUrl,\r\n    });\r\n    changeImg(attachmentUrl);\r\n  };\r\n\r\n  const onDefaultImg = async() => {\r\n    await dbService.collection('users').doc(user.uid).update({\r\n      user_image: null,\r\n    });\r\n    changeImg(null);\r\n  }\r\n\r\n  const changeImg = (data) => {\r\n    setAttachment([]);\r\n    dispatch(userMiddleware(user.uid, '', 'init'));\r\n    dispatch(editUserImgThunk(user.uid, data));\r\n    dispatch(editMypageThunk(user.uid, data, 'img'));\r\n    setChange(!change);\r\n    setImg(false);\r\n    setTimeout(()=>{\r\n      dispatch(editMypageThunk(user.uid, '', 'finish'));\r\n    }, 1000);\r\n    setLoad(false);\r\n  }\r\n\r\n  const onIconClick = () => {\r\n    setNickName(!nickName);\r\n  }\r\n\r\n  const onImgClick = () => {\r\n    setImg(!img);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <S.Id>\r\n        <S.Paragraph>\r\n          <S.Title>아이디</S.Title>\r\n        </S.Paragraph>\r\n        <p>{user.email}</p>\r\n      </S.Id>\r\n      <S.NickName>\r\n        <S.Paragraph>\r\n          <S.Title>닉네임</S.Title>\r\n          <S.Icon onClick={onIconClick} className=\"fas fa-cog\" title={\"수정하기\"}></S.Icon>\r\n        </S.Paragraph>\r\n        {nickName ?\r\n        (<div>\r\n          <textarea ref={input} type=\"text\" maxLength=\"15\" wrap=\"off\" placeholder=\"최대 15자(띄어쓰기 포함)\" onKeyPress={e=>onEnter(e)} />\r\n          <button onClick={onSubmitBtn}>제출</button>\r\n        </div>) :\r\n        (userDB.name ? <p>{userDB.name}</p> : <p onClick={onUsername}>닉네임을 설정해보세요!</p>)}\r\n      </S.NickName>\r\n      <S.Profile>\r\n        <S.Paragraph>\r\n          <S.Title>프로필 사진</S.Title>\r\n          <S.Icon onClick={onImgClick} className=\"fas fa-cog\" title={\"수정하기\"}></S.Icon>\r\n        </S.Paragraph>\r\n        <S.Paragraph>\r\n          {userDB.user_image ? (img || <p><S.ProfileImg src={userDB.user_image} alt=\"프로필 사진\"></S.ProfileImg></p>) : (img || <p><S.ProfileIcon className=\"fas fa-user-circle\"></S.ProfileIcon></p>)}\r\n          {img && <p>\r\n            <S.Form onSubmit={onSubmit} img={userDB.user_image}>\r\n              <div>\r\n                <label for=\"inputFile\">사진 변경</label>\r\n                <input\r\n                  id=\"inputFile\"\r\n                  accept=\"image/*\"\r\n                  type=\"file\"\r\n                  onChange={onFileChange}\r\n                  name=\"fileNames[]\"\r\n                />\r\n                {userDB.user_image &&\r\n                <p onClick={onDefaultImg}>기본사진으로 변경</p>}\r\n              </div>\r\n              {attachment && (\r\n                <div>\r\n                  {attachment.map((atta, i) => (\r\n                    <>\r\n                      <img key={i} src={atta} width=\"80px\" height=\"80px\" alt=\"프로필 사진\"/>\r\n                      <button type=\"submit\">선택 완료</button>\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {load && <S.Loading>\r\n                <Loading width=\"30\" height=\"30\" />\r\n              </S.Loading>}\r\n            </S.Form>\r\n          </p>}\r\n        </S.Paragraph>\r\n      </S.Profile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Info;","import styled from \"styled-components\";\r\nimport { flex, frame, cursorPointer } from \"../styleConstatns\";\r\n\r\nconst List = styled.li`\r\n  ${frame};\r\n\r\n`;\r\n\r\nconst Null = styled.p`\r\n  ${frame};\r\n  cursor: auto;\r\n`;\r\n\r\nexport { List, Null };\r\n","import React from 'react';\r\nimport * as S from \"./Post.style\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Post = ({user}) => {\r\n\r\n  const postDB = useSelector(state => state.mypagePost.data);\r\n\r\n  const history = useHistory();\r\n\r\n  const check = postDB.length === 0;\r\n\r\n  const onMovePage =(post) => {\r\n    history.push({\r\n      pathname: `/categorylist/${post.post_region}`,\r\n      search: `?id=${post.post_id}`,\r\n      state: {\r\n        like: user.user_like_posts,\r\n        bookmark: user.user_bookmark_posts,\r\n        postData: post,\r\n        profile: user.user_image,\r\n        check: 'check',\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {!check && postDB.map((post) => {\r\n        return(\r\n        <S.List key={post.post_id} onClick={() => onMovePage(post)} title={'게시글 보러가기'}>\r\n          <p>{post.post_title}</p>\r\n        </S.List>\r\n        )\r\n      })}\r\n      {check &&\r\n        <S.Null>작성하신 게시글이 없습니다</S.Null>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Post;","import styled from \"styled-components\";\r\nimport { frame } from \"../styleConstatns\";\r\n\r\nconst List = styled.li`\r\n  p {\r\n    ${frame};\r\n  }\r\n`;\r\n\r\nconst Null = styled.p`\r\n  ${frame};\r\n  cursor: auto;\r\n`;\r\n\r\nexport { List, Null };\r\n","import React from 'react';\r\nimport * as S from \"./Comment.style\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Comment = ({ user }) => {\r\n\r\n  const commentDB = useSelector(state => state.mypageComment.data);\r\n\r\n  const history = useHistory();\r\n\r\n  const check = commentDB.length === 0;\r\n\r\n  const onMovePage =(com) => {\r\n    history.push({\r\n      pathname: `/categorylist/${com.post_region}`,\r\n      search: `?id=${com.post_id}`,\r\n      state: {\r\n        like: user.user_like_posts,\r\n        bookmark: user.user_bookmark_posts,\r\n        postData: com,\r\n        profile: user.user_image,\r\n        check: 'check',\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  return(\r\n    <>\r\n      {!check && commentDB.map((com) => {\r\n        return(\r\n        <S.List key={com.comment_id} onClick={()=>{onMovePage(com)}} title={'게시글 보러가기'}>\r\n          <p>{com.comment_content}</p>\r\n        </S.List>\r\n        )\r\n      })}\r\n      {check &&\r\n        <S.Null>작성한 댓글이 없습니다</S.Null>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comment;","import styled from \"styled-components\";\r\nimport { flex, frame } from \"../styleConstatns\";\r\n\r\nconst List = styled.li`\r\n  ${frame};\r\n`;\r\n\r\nconst Null = styled.p`\r\n  ${frame};\r\n  cursor: auto;\r\n`;\r\n\r\nexport { List, Null };\r\n","import React from 'react';\r\nimport * as S from \"./Bookmark.style\";\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Bookmark = ({ user }) => {\r\n\r\n  const bookmarkDB = useSelector(state => state.mypageBookmark.data);\r\n\r\n  const history = useHistory();\r\n\r\n  const check = bookmarkDB.length === 0;\r\n\r\n  const onMovePage =(post) => {\r\n    history.push({\r\n      pathname: `/categorylist/${post.post_region}`,\r\n      search: `?id=${post.post_id}`,\r\n      state: {\r\n        like: user.user_like_posts,\r\n        bookmark: user.user_bookmark_posts,\r\n        postData: post,\r\n        profile: user.user_image,\r\n        check: 'check',\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      {!check && bookmarkDB.map((bm) => {\r\n        return (\r\n          <S.List key={bm.post_id} onClick={()=>onMovePage(bm)} title={'게시글 보러가기'}>\r\n            <p>{bm.post_title}</p>\r\n          </S.List>\r\n        )\r\n      })}\r\n      {check &&\r\n        <S.Null>찜한 목록이 없습니다</S.Null>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bookmark;","import styled from 'styled-components';\r\nimport {\r\n  flex,\r\n  marginTop,\r\n  fontSize,\r\n  hideScrollbar,\r\n  cursorPointer,\r\n  frame,\r\n} from '../styleConstatns';\r\n\r\nconst pink = \"#ff73b3\";\r\n\r\nconst Container = styled.section`\r\n  width: 100vw;\r\n  height: 90vh;\r\n  ${flex};\r\n  flex-direction: row;\r\n  caret-color: transparent;\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  position: absolute;\r\n  color: white;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  top: 1em;\r\n  right: 1em;\r\n`;\r\n\r\nconst Contents = styled.div`\r\n  position: relative;\r\n  width: 20rem;\r\n  height: 10rem;\r\n  border-radius: 20px;\r\n  ${flex};\r\n  overflow: hidden;\r\n  margin-bottom: 3rem;\r\n  h3 {\r\n    margin-bottom: 16px;\r\n    font-size: 13px;\r\n  }\r\n  .errorMsg {\r\n    font-size: 0.6rem;\r\n  }\r\n  h1 {\r\n    font-size: 34px;\r\n    color: white;\r\n    margin-bottom: 2.5rem;\r\n  }\r\n  input {\r\n    margin-bottom: 1rem;\r\n    display: block;\r\n    padding: 8px;\r\n    width: 70%;\r\n    height: 2rem;\r\n    border-radius: 12px;\r\n    outline: none;\r\n    box-shadow: 0 0 5px 1px ${pink};\r\n    caret-color: black;\r\n  }\r\n  p {\r\n    color: white;\r\n  }\r\n  .chageBtn {\r\n    border: none;\r\n    width: 5rem;\r\n    height: 2rem;\r\n    border-radius: 12px;\r\n    color: #fff;\r\n    background-color: ${pink};\r\n    cursor: pointer;\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    margin-top: 1rem;\r\n    box-shadow: 0 0 5px ${pink};\r\n  }\r\n`;\r\n\r\nexport { BackBtn, Contents, Container };\r\n","import React, { useState } from 'react';\r\nimport * as S from './Password.style';\r\nimport firebase from 'firebase';\r\n\r\nconst Password = () => {\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [change, setChange] = useState(false);\r\n\r\n  const clearErrors = () => {\r\n    setPasswordError('');\r\n  };\r\n\r\n  // 패스워드 변경\r\n  const passwordChange = async () => {\r\n    clearErrors();\r\n    function getASecureRandomPassword() {\r\n      return password;\r\n    }\r\n\r\n    // [START auth_update_password]\r\n    const user = firebase.auth().currentUser;\r\n    const newPassword = getASecureRandomPassword();\r\n\r\n    user\r\n      .updatePassword(newPassword)\r\n      .then(() => {\r\n        setPassword('');\r\n        alert('패스워드가 변경 되었습니다.');\r\n      })\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/requires-recent-login':\r\n          case 'auth/weak-password':\r\n          case 'auth/argument-error':\r\n          case 'auth/wrong-password':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  // 재인증\r\n  const reAuth = () => {\r\n    clearErrors();\r\n    var user = firebase.auth().currentUser;\r\n    var credential = firebase.auth.EmailAuthProvider.credential(\r\n      user.email,\r\n      password\r\n    );\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(function () {\r\n        user.updatePassword(password).then(function () {\r\n          setPassword('');\r\n          alert('재인증 되었습니다!');\r\n          setChange(!change);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        switch (err.code) {\r\n          case 'auth/wrong-password':\r\n          case 'auth/too-many-requests':\r\n            setPasswordError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <S.Contents>\r\n        {change ? (\r\n          <>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <p className=\"errorMsg\">{passwordError}</p>\r\n            <button className=\"chageBtn\" onClick={passwordChange}>\r\n              변경\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h3>계속하려면 먼저 본인임을 인증하세요.</h3>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <p className=\"errorMsg\">{passwordError}</p>\r\n            <button className=\"chageBtn\" onClick={reAuth}>\r\n              재인증\r\n            </button>\r\n          </>\r\n        )}\r\n      </S.Contents>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as S from './Mypage.style';\r\n\r\nimport Info from './info/Info';\r\nimport Post from './post/Post';\r\nimport Comment from './comment/Comment';\r\nimport Bookmark from './bookmark/Bookmark';\r\nimport Password from './Password/Password';\r\n\r\nimport { mypageBookmarkMiddleware } from 'store/modules/mypageBookmark';\r\nimport { mypageCommentMiddleware } from 'store/modules/mypageComment';\r\nimport { mypagePostMiddleware } from 'store/modules/mypagePost';\r\nimport { closeNav } from 'store/modules/nav';\r\n\r\nimport firebase from 'firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Mypage = ({ user }) => {\r\n  const [info, setInfo] = useState(false);\r\n  const [post, setPost] = useState(false);\r\n  const [comment, setComment] = useState(false);\r\n  const [bookmark, setBookmark] = useState(false);\r\n  const [password, setPassword] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [change, setChange] = useState(false);\r\n\r\n  const [check, setCheck] = useState(false);\r\n\r\n  const [uid, setUid] = useState('');\r\n\r\n  const auth = firebase.auth();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDB = useSelector((state) => state.userLike.data);\r\n\r\n  const { isNavOpened } = useSelector((state) => state.nav);\r\n\r\n  const onClose = () => {\r\n    setInfo(false);\r\n    setPost(false);\r\n    setComment(false);\r\n    setBookmark(false);\r\n    setPassword(false);\r\n  };\r\n\r\n  const onDelayClose = () => {\r\n    setCheck(false);\r\n    if (matchMedia('screen and (min-width: 740px)').matches) {\r\n      setTimeout(() => {\r\n        onClose();\r\n      }, 800);\r\n    } else {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const onInfo = () => {\r\n    if (info) {\r\n      onDelayClose();\r\n      return;\r\n    }\r\n    onClose();\r\n    setInfo(true);\r\n    setCheck(true);\r\n  };\r\n\r\n  const onPost = () => {\r\n    if (post) {\r\n      onDelayClose();\r\n      return;\r\n    }\r\n    onClose();\r\n    setPost(true);\r\n    setCheck(true);\r\n  };\r\n\r\n  const onComment = () => {\r\n    if (comment) {\r\n      onDelayClose();\r\n      return;\r\n    }\r\n    onClose();\r\n    setComment(true);\r\n    setCheck(true);\r\n  };\r\n\r\n  const onBookmark = () => {\r\n    if (bookmark) {\r\n      onDelayClose();\r\n      return;\r\n    }\r\n    onClose();\r\n    setBookmark(true);\r\n    setCheck(true);\r\n  };\r\n\r\n  const onPassword = () => {\r\n    if (password) {\r\n      onDelayClose();\r\n      return;\r\n    }\r\n    onClose();\r\n    setPassword(true);\r\n    setCheck(true);\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  // 로그인 페이지로 전환\r\n  const routeChange = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  // 사용자 삭제\r\n  const userDel = () => {\r\n    if (true) {\r\n      const user = auth.currentUser;\r\n      user\r\n        .delete()\r\n        .then(() => {\r\n          routeChange();\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {}, [isNavOpened]);\r\n\r\n  useEffect(() => {\r\n    dispatch(mypagePostMiddleware(user.uid));\r\n\r\n    auth.onAuthStateChanged((user) => {\r\n      setUid(user);\r\n    });\r\n\r\n    dispatch(closeNav());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < user.user_write_posts.length; i++) {\r\n      if (i === user.user_write_posts.length - 1) {\r\n        dispatch(mypagePostMiddleware(user.uid, 'finish'));\r\n      }\r\n      if (i !== user.user_write_posts.length - 1) {\r\n        dispatch(mypagePostMiddleware(user.uid));\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < user.user_bookmark_posts.length; i++) {\r\n      if (i === user.user_bookmark_posts.length - 1) {\r\n        dispatch(\r\n          mypageBookmarkMiddleware(user.user_bookmark_posts[i], 'finish')\r\n        );\r\n      }\r\n      if (i !== user.user_bookmark_posts.length - 1) {\r\n        dispatch(mypageBookmarkMiddleware(user.user_bookmark_posts[i]));\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < user.user_write_comments.length; i++) {\r\n      if (i === user.user_write_comments.length - 1) {\r\n        dispatch(\r\n          mypageCommentMiddleware(user.user_write_comments[i], 'finish')\r\n        );\r\n      }\r\n      if (i !== user.user_write_comments.length) {\r\n        dispatch(mypageCommentMiddleware(user.user_write_comments[i]));\r\n      }\r\n    }\r\n  }, [change]);\r\n\r\n  return (\r\n    <>\r\n      <S.Container isNavOpened={isNavOpened}>\r\n        <S.Contents check={check}>\r\n          <S.BackImage>\r\n            {userDB.user_image ? (\r\n              <img src={userDB.user_image} alt=\"배경사진\" />\r\n            ) : (\r\n              <i className=\"fas fa-user-circle\"></i>\r\n            )}\r\n            {userDB.name ? (\r\n              <S.Title name={userDB.name}>\r\n                <span>\r\n                  <b>'{userDB.name}'</b>\r\n                  <b>님</b>\r\n                </span>\r\n                <span>반갑습니다</span>\r\n              </S.Title>\r\n            ) : (\r\n              <span>닉네임을 설정해보세요!</span>\r\n            )}\r\n          </S.BackImage>\r\n          <S.ListArea>\r\n            <p onClick={onInfo}>\r\n              <i className=\"fas fa-user-alt\"></i>내 정보\r\n            </p>\r\n            <ul>\r\n              <li onClick={onPost}>\r\n                <i className=\"fas fa-pencil-alt\"></i>\r\n                내가 쓴 글\r\n              </li>\r\n              <li onClick={onComment}>\r\n                <i className=\"fas fa-comment-dots\"></i>\r\n                내가 쓴 댓글\r\n              </li>\r\n              <li onClick={onBookmark}>\r\n                <i className=\"fas fa-bookmark\"></i>찜\r\n              </li>\r\n              <li onClick={onPassword}>\r\n                <i className=\"fas fa-unlock-alt\"></i>비밀번호 변경\r\n              </li>\r\n\r\n              <li\r\n                onClick={() => setOpen(!open)}\r\n                className=\"btn btn-primary\"\r\n                data-toggle=\"modal\"\r\n              >\r\n                <i className=\"fas fa-user-times\"></i>탈퇴하기\r\n              </li>\r\n            </ul>\r\n          </S.ListArea>\r\n        </S.Contents>\r\n        {open && (\r\n          <>\r\n            <S.Logincontainer>\r\n              <S.Header>\r\n                <ul>\r\n                  <li>\r\n                    <h1>탈퇴하시겠습니까?</h1>\r\n                  </li>\r\n                  <li>\r\n                    <button className=\"modal fade\" onClick={userDel}>\r\n                      예\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      className=\"modal fade\"\r\n                      onClick={() => setOpen(!open)}\r\n                    >\r\n                      아니오\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </S.Header>\r\n            </S.Logincontainer>\r\n          </>\r\n        )}\r\n        {info && (\r\n          <S.Content check={check}>\r\n            <ul>\r\n              <li>\r\n                내 정보\r\n                <i\r\n                  className=\"fas fa-angle-left\"\r\n                  onClick={onDelayClose}\r\n                  title={'뒤로가기'}\r\n                ></i>\r\n              </li>\r\n              <Info\r\n                uid={uid}\r\n                user={user}\r\n                userDB={userDB}\r\n                change={change}\r\n                setChange={setChange}\r\n              />\r\n            </ul>\r\n          </S.Content>\r\n        )}\r\n        {post && (\r\n          <S.Content check={check}>\r\n            <ul>\r\n              <li>\r\n                내가 쓴 글\r\n                <i\r\n                  className=\"fas fa-angle-left\"\r\n                  onClick={onDelayClose}\r\n                  title={'뒤로가기'}\r\n                ></i>\r\n              </li>\r\n              <Post user={user} />\r\n            </ul>\r\n          </S.Content>\r\n        )}\r\n        {comment && (\r\n          <S.Content check={check}>\r\n            <ul>\r\n              <li>\r\n                내가 쓴 댓글\r\n                <i\r\n                  className=\"fas fa-angle-left\"\r\n                  onClick={onDelayClose}\r\n                  title={'뒤로가기'}\r\n                ></i>\r\n              </li>\r\n              <Comment user={user} />\r\n            </ul>\r\n          </S.Content>\r\n        )}\r\n        {bookmark && (\r\n          <S.Content check={check}>\r\n            <ul>\r\n              <li>\r\n                찜\r\n                <i\r\n                  className=\"fas fa-angle-left\"\r\n                  onClick={onDelayClose}\r\n                  title={'뒤로가기'}\r\n                ></i>\r\n              </li>\r\n              <Bookmark user={user} />\r\n            </ul>\r\n          </S.Content>\r\n        )}\r\n        {password && (\r\n          <S.Content check={check}>\r\n            <ul>\r\n              <li>\r\n                비밀번호 변경\r\n                <i\r\n                  className=\"fas fa-angle-left\"\r\n                  onClick={onDelayClose}\r\n                  title={'뒤로가기'}\r\n                  user={user}\r\n                ></i>\r\n              </li>\r\n              <Password />\r\n            </ul>\r\n          </S.Content>\r\n        )}\r\n      </S.Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mypage;\r\n","import React from 'react';\r\nimport Mypage from 'components/Mypage/Mypage';\r\n\r\n\r\nexport default function MyPage(location) {\r\n\r\n  return <Mypage user={location.location.state.user} />\r\n\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst pink = \"#ff73b3\";\r\n\r\nconst LoginBg = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst Logincontainer = styled.div`\r\n  width: 480px;\r\n  height: 400px;\r\n  background-color: #fffaf0;\r\n  position: relative;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  z-index: 100;\r\n  padding: 60px 68px 40px 68px;\r\n  @media screen and (max-width: 740px) {\r\n    width: 100vw;\r\n    margin: 0;\r\n    height: 100vh;\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  text-align: center;\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 40px 0;\r\n    li {\r\n      width: 100%;\r\n      h1 {\r\n        font-size: 34px;\r\n        transform: translateY(-100%);\r\n      }\r\n      .inputEmail {\r\n        display: block;\r\n        width: 100%;\r\n        padding: 8px;\r\n        height: 2rem;\r\n        border-radius: 12px;\r\n        outline: none;\r\n      }\r\n      .sendEmailBtn {\r\n        border: none;\r\n        width: 100%;\r\n        height: 3rem;\r\n        border-radius: 12px;\r\n        color: #fff;\r\n        background-color: ${pink};\r\n        cursor: pointer;\r\n        font-size: 18px;\r\n        margin-top: 1rem;\r\n        box-shadow: 0 0 10px 1px ${pink};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst BackBtn = styled.button`\r\n  position: absolute;\r\n  border: none;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n  top: 1em;\r\n  left: 1em;\r\n`;\r\nexport { Header, Logincontainer, LoginBg, BackBtn };\r\n","import React, { useState } from 'react';\r\nimport * as S from './LoginHelp.style';\r\nimport firebaseService from 'firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoginHelp() {\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const history = useHistory();\r\n\r\n  // 로그인 페이지로 전환\r\n  const routeChange = () => {\r\n    let path = '/login';\r\n    history.push(path);\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError('');\r\n  };\r\n\r\n  const sendPasswordReset = () => {\r\n    clearErrors();\r\n    firebaseService\r\n      .auth()\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        setEmail('');\r\n        alert('이메일을 전송 했습니다.');\r\n      })\r\n      .catch((err) => {\r\n        switch (err.code) {\r\n          case 'auth/invalid-email':\r\n          case 'auth/user-disabled':\r\n          case 'auth/user-not-found':\r\n            setEmailError(err.message);\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <S.LoginBg />\r\n      <S.Logincontainer>\r\n        <S.Header>\r\n          <ul>\r\n            <li>\r\n              <h1>비밀번호 재설정</h1>\r\n            </li>\r\n\r\n            <li>\r\n              <input\r\n                className=\"inputEmail\"\r\n                type=\"text\"\r\n                value={email}\r\n                autoFocus\r\n                required\r\n                placeholder=\"Email Address\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <p className=\"errorMsg\">{emailError}</p>\r\n              <button onClick={sendPasswordReset} className=\"sendEmailBtn\">\r\n                이메일로 받기\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <S.BackBtn onClick={routeChange}>\r\n            <i className=\"fas fa-arrow-left\"></i>\r\n          </S.BackBtn>\r\n        </S.Header>\r\n      </S.Logincontainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginHelp;\r\n","import React from 'react';\r\nimport LoginHelp from 'components/LoginHelp/LoginHelp';\r\n\r\nexport default function LoginFind() {\r\n  return <LoginHelp />;\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport { loginUserInfo, logoutUserInfo } from 'store/modules/user';\r\nimport { userMiddleware } from 'store/modules/userLike';\r\nimport { dbService } from 'firebase.js';\r\n\r\nconst useAuth = () => {\r\n  const { isLoggedIn, userInfo } = useSelector((state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    userInfo: state.user.userInfo,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const login = (providerName) => {\r\n    const authProvider = new firebase.auth[`${providerName}AuthProvider`]();\r\n    return firebase.auth().signInWithPopup(authProvider);\r\n  };\r\n\r\n  const logout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch(logoutUserInfo());\r\n      });\r\n  };\r\n\r\n  const onAuthChange = (onUserChanged) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      onUserChanged(user);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      // 로그인한 유저가 있다면\r\n      if (user) {\r\n        const userDB = await dbService.collection('users').doc(user.uid).get();\r\n        // 유저 정보가 db에 저장되어 있다면\r\n        if (userDB.exists) {\r\n          dispatch(loginUserInfo(userDB.data()));\r\n          dispatch(userMiddleware(user.uid, '', 'init'));\r\n          // 아니면 새로 저장해야\r\n        } else {\r\n          const value = {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            name: user.displayName || '익명',\r\n            user_image: user.photoURL,\r\n            user_like_comments: [],\r\n            user_like_posts: [],\r\n            user_bookmark_posts: [],\r\n            user_write_comments: [],\r\n            user_write_posts: [],\r\n          };\r\n          dbService.collection('users').doc(user.uid).set(value);\r\n          dispatch(loginUserInfo(value));\r\n        }\r\n        // 로그인한 유저가 없다면\r\n      } else {\r\n        dispatch(logoutUserInfo());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return [isLoggedIn, userInfo, login, logout, onAuthChange];\r\n};\r\n\r\nexport default useAuth;\r\n","// react\r\nimport React, { useState } from \"react\";\r\n\r\n// style\r\nimport GlobalStyle from \"styles/GlobalStyle\";\r\nimport Header from \"components/Header/Header\";\r\nimport { Background, Content } from \"styles/Background\";\r\n\r\n// router\r\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\nimport CategoryList from \"pages/CategoryList\";\r\nimport Board from \"pages/Board/Board\";\r\nimport Home from \"pages/Home\";\r\nimport Login from \"pages/Login\";\r\nimport NotFound from \"pages/NotFound\";\r\nimport WriteBtn from \"components/Write/WriteBtn/WriteBtn\";\r\nimport MyPage from \"pages/MyPage\";\r\n\r\n// firebase\r\nimport { dbService } from \"firebase.js\";\r\nimport WriteModal from \"components/Write/WriteModal/WriteModal\";\r\nimport LoginFind from \"pages/LoginFind\";\r\n\r\n// hook\r\nimport useAuth from \"hooks/useAuth\";\r\n\r\nfunction App() {\r\n  const [visible, setVisible] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n  const [isLoggedIn, userInfo] = useAuth();\r\n\r\n  const isVisible = () => {\r\n    setVisible(!visible);\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <GlobalStyle />\r\n      <BrowserRouter>\r\n        {/* 사용자가 로그인 되었을 때*/}\r\n        {isLoggedIn ? (\r\n          <Header\r\n            setActive={setActive}\r\n            active={active}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        ) : (\r\n          <Header\r\n            setActive={setActive}\r\n            active={active}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        )}\r\n        <Content>\r\n          {!isLoggedIn ? (\r\n            // 로그인 전\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/loginhelp\" component={LoginFind} />\r\n              <Route exact path=\"/categorylist\" component={CategoryList} />\r\n              <Route path=\"/categorylist/:region\" component={Board} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          ) : (\r\n            // 로그인 후\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/categorylist\" component={CategoryList} />\r\n              <Route path=\"/categorylist/:region\" component={Board} />\r\n              <Route exact path=\"/mypage\" component={MyPage} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          )}\r\n        </Content>\r\n        <Link to=\"/categorylist/:region\" />\r\n        {isLoggedIn && (\r\n          <>\r\n            <WriteBtn isVisible={isVisible} />\r\n            <WriteModal visible={visible} isVisible={isVisible} />\r\n          </>\r\n        )}\r\n      </BrowserRouter>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport App from 'App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}